{"version":3,"sources":["../../common/src/components/table/styles.ts","../../common/src/components/table/cell.tsx","../../common/src/components/table/row.tsx","../../common/src/components/sort-icon/styles.ts","../../common/src/components/sort-icon/sort-icon.tsx","../../common/src/components/table/header-cell.tsx","../../common/src/components/table/header-row.tsx","../../common/src/components/table/body.tsx","../../common/src/components/table/header.tsx","../../common/src/components/table/empty-row.tsx","../../common/src/components/table/table.tsx","../../common/src/components/table/index.ts","../../common/src/screens/pos/pos.tsx","../../common/src/components/checkbox/styles.ts","../../common/src/components/checkbox/label.tsx","../../common/src/components/checkbox/icon.tsx","../../common/src/components/checkbox/checkbox.tsx","../../common/src/hooks/use-data-observable/use-data-observable.tsx","../../common/src/screens/common/ui-settings.tsx","../../common/src/components/search/styles.ts","../../common/src/components/search/search.tsx","../../common/src/hooks/use-ui/use-ui.ts","../../common/src/screens/common/row.tsx","../../common/src/screens/common/table.tsx","../../common/src/screens/common/product-categories.tsx","../../common/src/screens/common/product-tags.tsx","../../common/src/components/draggable/draggable.tsx","../../common/src/components/draggable/index.ts","../../common/src/hooks/use-on-layout.ts","../../common/src/screens/pos/styles.ts","../../common/src/components/tree/json/utils.ts","../../common/src/components/numpad/styles.ts","../../common/src/components/numpad/numpad.tsx","../../common/src/screens/pos/cart/rows/cells/quantity.tsx","../../common/src/screens/pos/cart/rows/cells/price.tsx","../../common/src/screens/pos/cart/rows/cells/total.tsx","../../common/src/screens/pos/cart/rows/cells/tax.tsx","../../common/src/components/meta-data/styles.ts","../../common/src/components/meta-data/meta-data.tsx","../../common/src/screens/pos/cart/rows/cells/edit-modal.tsx","../../common/src/screens/pos/cart/rows/cells/actions.tsx","../../common/src/components/snackbar/use-snackbar.ts","../../common/src/screens/pos/cart/rows/line-item.tsx","../../common/src/screens/pos/cart/rows/cells/fee-and-shipping-price.tsx","../../common/src/screens/pos/cart/rows/fee-line.tsx","../../common/src/screens/pos/cart/rows/shipping-line.tsx","../../common/src/screens/pos/cart/actions.tsx","../../common/src/screens/pos/cart/table.tsx","../../common/src/components/combobox/styles.ts","../../common/src/components/combobox/combobox.tsx","../../common/src/screens/common/customer-select.tsx","../../common/src/screens/pos/cart/totals.tsx","../../common/src/screens/pos/cart/buttons.tsx","../../common/src/screens/pos/cart/cart.tsx","../../common/src/screens/pos/products/cells/variations.tsx","../../common/src/screens/pos/products/cells/actions.tsx","../../common/src/screens/pos/products/cells/image.tsx","../../common/src/screens/pos/products/cells/name.tsx","../../common/src/screens/pos/products/cells/price.tsx","../../common/src/screens/pos/products/cells/regular-price.tsx","../../common/src/screens/pos/products/cells/sku.tsx","../../common/src/screens/pos/products/cells/index.ts","../../common/src/screens/pos/products/products.tsx","../../common/src/components/gutter/styles.ts","../../common/src/components/gutter/gutter.tsx","../../common/src/screens/products/cells/image.tsx","../../common/src/screens/products/cells/name.tsx","../../common/src/components/format/address.tsx","../../common/src/components/format/index.ts","../../common/src/components/format/name.tsx","../../common/src/components/format/number.tsx","../../common/src/components/format/list.tsx","../../common/src/components/format/date.tsx","../../common/src/components/format/currency.tsx","../../common/src/screens/common/price.tsx","../../common/src/components/menu/styles.ts","../../common/src/components/menu/item.tsx","../../common/src/components/menu/menu.tsx","../../common/src/components/arrow/styles.ts","../../common/src/components/arrow/arrow.tsx","../../common/src/components/dropdown/dropdown.tsx","../../common/src/components/tabs/styles.ts","../../common/src/components/tabs/tab.tsx","../../common/src/components/tabs/tabs.tsx","../../common/src/components/tree/styles.ts","../../common/src/components/tree/raw.tsx","../../common/src/components/tree/json/styles.ts","../../common/src/components/tree/json/value.tsx","../../common/src/components/tree/json/object.tsx","../../common/src/components/tree/json/array.tsx","../../common/src/components/tree/json/node.tsx","../../common/src/components/tree/tree.tsx","../../common/src/components/select/select.tsx","../../common/src/screens/products/cells/modal.tsx","../../common/src/screens/products/cells/delete-dialog.tsx","../../common/src/screens/products/cells/actions.tsx","../../common/src/screens/common/date.tsx","../../common/src/screens/products/cells/index.ts","../../common/src/screens/products/styles.ts","../../common/src/screens/products/products.tsx","../../common/src/screens/orders/cells/modal.tsx","../../common/src/screens/orders/cells/actions.tsx","../../common/src/screens/orders/cells/address.tsx","../../common/src/screens/orders/cells/customer.tsx","../../common/src/screens/orders/cells/index.ts","../../common/src/screens/orders/cells/note.tsx","../../common/src/screens/orders/cells/status.tsx","../../common/src/screens/orders/styles.ts","../../common/src/screens/orders/orders.tsx","../../common/src/screens/customers/add-customer-modal.tsx","../../common/src/screens/customers/cells/address.tsx","../../common/src/screens/customers/cells/name.tsx","../../common/src/screens/customers/cells/index.ts","../../common/src/screens/customers/cells/avatar.tsx","../../common/src/screens/customers/cells/email.tsx","../../common/src/screens/customers/cells/actions.tsx","../../common/src/screens/customers/styles.ts","../../common/src/screens/customers/customers.tsx","../../common/src/screens/support/auth-db.tsx","../../common/src/screens/support/store-db.tsx","../../common/src/screens/support/support.tsx","../../common/src/screens/header/user-menu/user-settings.tsx","../../common/src/screens/header/user-menu/styles.ts","../../common/src/screens/header/user-menu/user-menu.tsx","../../common/src/screens/header/online/online.tsx","../../common/src/screens/header/notifications/notifications.tsx","../../common/src/screens/header/styles.ts","../../common/src/screens/header/right.tsx","../../common/src/navigators/main.tsx"],"names":["Row","styled","View","Cell","HeaderRow","HeaderCell","HeaderTextWrapper","MemoizedCell","React","children","cellData","flexGrow","flexShrink","flexBasis","width","style","rowData","dataKey","String","displayName","MemoizedRow","columns","map","column","index","hide","key","getCellProps","Container","Up","active","theme","COLOR_PRIMARY","COLOR_DISABLED","Down","SortIcon","direction","visible","MemoizedHeaderCell","sort","sortBy","defaultSortDirection","sortDirection","label","disableSort","hideLabel","sortable","showSortIndicator","newSortDirection","onPress","event","hovered","undefined","MemoizedHeaderRow","getHeaderCellProps","Body","Object","assign","Header","EmptyRow","message","MemoizedEmptyRow","viewabilityConfig","minimumViewTime","viewAreaCoveragePercentThreshold","stickyHeaderIndices","MemoizedTable","data","footer","empty","rest","keyExtractor","item","get","childCount","count","renderItemFunction","Array","isArray","child","find","type","props","renderItem","headerComponent","ListHeaderComponent","ListFooterComponent","ListEmptyComponent","Table","POSContext","currentOrder","setCurrentOrder","POS","storeDB","useAppState","productsUI","useObservableSuspense","useUIResource","cartUI","isDragging","productColumnWidth","useSharedValue","useOnLayout","containerLayout","setContainerLayout","productColumnLayout","setProductColumnLayout","handleStartColumnResize","context","value","handleColumnResize","current","withSpring","clamp","translationX","console","log","handleEndColumnResize","atomicPatch","productsColumnStyle","useAnimatedStyle","handleContainerLayout","handleProductColumnLayout","orderQuery","collections","orders","where","eq","useObservableState","$","pipe","filter","o","length","useWhyDidYouUpdate","Provider","onLayout","as","Animated","fallback","ui","onStart","onActive","onEnd","PressableContainer","Pressable","disabled","css","Box","checked","CHECKBOX_BACKGROUND_COLOR","CHECKBOX_WIDTH","CHECKBOX_HEIGHT","CHECKBOX_BORDER_WIDTH","CHECKBOX_BORDER_COLOR","CHECKBOX_BORDER_RADIUS","Check","Icon","LabelWrapper","Label","info","CheckboxIcon","hasError","focused","pressed","name","size","color","Checkbox","helpText","checkedRaw","onChangeRaw","onChange","useUncontrolledState","useDataObservable","collectionName","initialQuery","collection","query","setQuery","navigation","useNavigation","Error","data$","useObservable","inputs$","switchMap","q","shareReplay","catchError","err","error","useSubscription","first","result","audit","catch","response","status","navigate","login","warn","restApiQuery","UiSettings","t","useTranslation","id","split","setVisible","open","activator","onRequestClose","atomicSet","display","i","title","reset","Input","Actions","Search","actions","onSearch","filters","renderFilters","filterLabel","onRemove","removable","clearable","leftAccessory","action","uiResources","posProducts","cart","products","customers","useUI","ui$","getLocal$","uiDoc","initialUI","insertLocal","upsertLocal","ObservableResource","DefaultCell","cells","forceRender","_sortBy","_sortDirection","handleSort","prev","maybeSortedData","_flatten","schema","indexes","includes","_orderBy","getItemLayout","d","offset","ProductCategories","product","categories","handleSelectCategory","category","set","tagsArray","cat","Group","tags","Skeleton","numberOfTags","ProductTags","handleSelectTag","tag","Draggable","lowerBound","upperBound","Math","min","max","onGestureEvent","minX","minY","maxX","maxY","useAnimatedGestureHandler","ctx","layout","setLayout","nativeEvent","PAGE_MAIN_PADDING_Y","PAGE_MAIN_PADDING_X","ProductsColumn","CartColumn","getObjectType","obj","Symbol","iterator","prototype","toString","call","slice","parse","string","indexOf","eval","JSON","e","Display","DisplayText","Text","Keys","Key","KeyText","keys","Numpad","placeholder","displayText","setDisplayText","handleKeyPress","Quantity","lineItem","quantity","quantity$","handleChangeText","newValue","a","Number","autosize","onFocus","Price","price","price$","handleChange","Total","total","Tax","tax","MetaData","handleAddRow","meta","EditModal","onClose","handleChangeTaxClass","taxClass","hasProperty","property","topLevelFields","methodTitle","primaryAction","Section","taxStatus","metaData","showSnackbar","options","SnackbarContext","show","useSnackbar","dismissable","flexDirection","removeCartLine","LineItem","FeeAndShippingPrice","total$","FeeLine","fee","ShippingLine","shipping","hideBackdrop","CartTable","items","onSort","ScrollView","Combobox","choices","selected","selectedRaw","searchValue","setOpen","showPopover","choiceComponents","choice","Item","onSelect","matchWidth","CustomerSelect","order","selectedCustomer","setSelectedCustomer","search","handleSelectCustomer","addCustomer","orderBy","customer","firstName","lastName","_id","Totals","totalTax","totalTax$","flex","Buttons","showAuthLogin","useAuthLogin","addFeeLine","addShippingLine","methodId","customerNote","replicationState","syncRestApi","push","error$","subscribe","code","run","remove","number","pricesIncludeTax","currencySymbol","Cart","get$","items$","isRxDocument","cart$","grow","Variations","user","variations","addToCart","variation","findOne","exec","addOrUpdateLineItem","fetchData","endpoint","attributes","attribute","option","createNewOrderWithProduct","newOrder","isSynced","isVariable","backgroundStyle","Image","thumbnail","src","Name","sku","attr","join","RegularPrice","regular_price","SKU","image","regularPrice","Products","totalRecords","totalRecords$","recordsShowing","f","alignItems","Platform","OS","Gutter","height","addresses","default","AU","AT","BE","CA","CH","CL","CN","CZ","DE","EE","FI","DK","FR","HK","HU","IN","IS","IT","JP","TW","LI","NL","NZ","NO","PL","PT","SK","RS","SI","ES","SE","TR","UG","US","VN","prefix","suffix","List","array","Address","address","showName","addr","template","country","hasOwnProperty","first_name","last_name","state_code","state","state_upper","toUpperCase","city_upper","city","matches","match","forEach","regex","RegExp","prop","replace","line","idx","trim","Date","format","Currency","symbol","FormattedPrice","TEXT_COLOR_INVERSE","useTheme","handlePress","calculatedStyled","hoverBackgroundColor","MENU_ITEM_HOVER_BACKGROUND_COLOR","backgroundColor","Menu","rawItem","snakeCase","Left","Right","Arrow","renderArrow","Dropdown","_activator","placement","popoverStyle","paddingLeft","paddingRight","TabsContainer","Tab","TEXT_COLOR","TEXT_COLOR_SECONDARY","Tabs","tabs","tabItems","useMemo","tab","Raw","TextInput","RawButtonContainer","raw","stringify","multiline","numberOfLines","editable","ObjectNode","JsonValue","keyPath","deep","JsonObject","isCollapsed","onExpand","_keyPath","nextDeep","collapsed","setCollapsed","numberOfItems","getOwnPropertyNames","itemName","renderCollapsed","list","renderNotCollapsed","JsonArray","JsonNode","originalValue","toISOString","Tree","rootName","setRaw","background","accessoryLeft","Select","choicesRaw","hidePopover","selectedChoice","x","onLabelClick","rightAccessory","minWidth","maxHeight","Modal","setSelected","content","salePrice","onSale","toJSON","DeleteDialog","secondaryActions","showDialog","setShowDialog","FormattedDate","dateCreated","Customer","customer_id","billing","note","Orders","AddCustomer","setFirstName","email","setEmail","handleSave","currentCustomer","customersCollection","insert","avatarUrl","showModal","setShowModal","Customers","AuthDB","userDB","counts","setCounts","changeEvent","promises","records","Promise","all","resolved","deleteAll","table","printToConsole","StoreDB","values","Support","UserSettings","taxRates$","taxes","taxRates","sectioned","zIndex","DropDown","UserMenu","unsetLastUser","showSettings","setShowSettings","dispatch","CommonActions","params","foo","Online","online","Notifications","HeaderRight","Drawer","createDrawerNavigator","MainNavigator","openDrawer","route","DrawerActions","screenOptions","headerStyle","headerTintColor","headerTitleStyle","fontWeight","textAlign","margin","headerBackgroundContainerStyle","headerLeftContainerStyle","padding","headerRightContainerStyle","headerTitleContainerStyle","headerLeft","headerRight","Navigator","Screen","component"],"mappings":"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","file":"static/js/4.a8322be2.chunk.js","sourcesContent":["import styled from 'styled-components/native';\n\nexport const Row = styled.View`\n\tflex-direction: row;\n\tborder-bottom-width: 1px;\n\tborder-style: solid;\n\tborder-bottom-color: #000000;\n`;\n\nexport const Cell = styled.View`\n\tpadding: 5px;\n\talign-items: flex-start;\n`;\n\nexport const HeaderRow = styled.View`\n\tflex-direction: row;\n\tborder-bottom-width: 2px;\n\tborder-style: solid;\n\tborder-bottom-color: #000000;\n\tbackground-color: #ffffff;\n`;\n\nexport const HeaderCell = styled.View`\n\tpadding: 5px;\n`;\n\nexport const HeaderTextWrapper = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n`;\n","import * as React from 'react';\nimport { ViewStyle } from 'react-native';\nimport * as Styled from './styles';\nimport Text from '../text';\n\nexport interface TableCellProps {\n\tchildren?: React.ReactNode;\n\tcellData?: any;\n\tcolumn?: any;\n\tdataKey?: string | number;\n\trowData?: any;\n\tstyle?: ViewStyle;\n\t// rowIndex: number;\n\tflexGrow?: 0 | 1;\n\tflexShrink?: 0 | 1;\n\tflexBasis?: any;\n\twidth?: string;\n\tindex?: number;\n}\n\nconst Cell = ({\n\tchildren,\n\tcellData,\n\tflexGrow = 1,\n\tflexShrink = 1,\n\tflexBasis = 'auto',\n\twidth = '100%',\n\tstyle,\n\trowData,\n\tdataKey,\n}: TableCellProps) => {\n\tif (children) {\n\t\treturn (\n\t\t\t<Styled.Cell style={[{ flexGrow, flexShrink, flexBasis, width }, style]}>\n\t\t\t\t{typeof children === 'function' ? children({ cellData }) : children}\n\t\t\t</Styled.Cell>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Styled.Cell style={[{ flexGrow, flexShrink, flexBasis, width }, style]}>\n\t\t\t<Text>{String(cellData ?? '')}</Text>\n\t\t</Styled.Cell>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedCell = React.memo(Cell);\nMemoizedCell.displayName = 'Table.Body.Row.Cell';\n\nexport default MemoizedCell;\n","import * as React from 'react';\nimport { ViewStyle } from 'react-native';\nimport * as Styled from './styles';\nimport Cell, { TableCellProps } from './cell';\n\ntype ColumnProps = import('./types').ColumnProps;\nexport type GetCellPropsFunction = () => TableCellProps;\n\nexport interface TableRowProps {\n\tchildren?: React.ReactNode;\n\trowData: any;\n\tcolumns?: ColumnProps[];\n\tstyle?: ViewStyle;\n}\n\nconst Row = ({ rowData, columns, style, children }: TableRowProps) => {\n\t// const key = rowData.id;\n\t// const renderCells = React.memo(() => {\n\n\t// }, [columns])\n\n\treturn (\n\t\t<Styled.Row style={style}>\n\t\t\t{columns &&\n\t\t\t\tcolumns.map((column: ColumnProps, index: number) => {\n\t\t\t\t\tif (column.hide) return;\n\t\t\t\t\tconst dataKey = column.key || index;\n\t\t\t\t\tconst cellData = rowData[dataKey];\n\t\t\t\t\tconst { flexGrow, flexShrink, flexBasis, width } = column;\n\n\t\t\t\t\tconst getCellProps: GetCellPropsFunction = () => ({\n\t\t\t\t\t\tcellData,\n\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\tdataKey,\n\t\t\t\t\t\tflexGrow,\n\t\t\t\t\t\tflexShrink,\n\t\t\t\t\t\tflexBasis,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\trowData,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tkey: dataKey,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (typeof children === 'function') {\n\t\t\t\t\t\treturn children({ cellData, column, getCellProps });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <Cell {...getCellProps()} />;\n\t\t\t\t})}\n\t\t</Styled.Row>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedRow = React.memo(Row) as unknown as React.FC<TableRowProps> & { Cell: typeof Cell };\nMemoizedRow.displayName = 'Table.Row';\nMemoizedRow.Cell = Cell;\n\nexport default MemoizedRow;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\tpadding: 3px;\n\topacity: 0.6;\n`;\n\nexport const Up = styled.View<{ active: boolean }>`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-bottom-color: ${({ active, theme }) =>\n\t\tactive ? theme.COLOR_PRIMARY : theme.COLOR_DISABLED};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n\tmargin-bottom: 2px;\n`;\n\nexport const Down = styled.View<{ active: boolean }>`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-top-width: 4px;\n\tborder-top-color: ${({ active, theme }) => (active ? theme.COLOR_PRIMARY : theme.COLOR_DISABLED)};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n","import * as React from 'react';\nimport * as Styled from './styles';\n\ntype SortDirection = import('../table/types').SortDirection;\n\nexport interface SortIconProps {\n\t/**\n\t *\n\t */\n\tdirection?: SortDirection;\n\t/**\n\t *\n\t */\n\tvisible?: boolean;\n}\n\nexport const SortIcon = ({ direction, visible = true }: SortIconProps) => {\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Styled.Up active={direction === 'asc'} />\n\t\t\t<Styled.Down active={direction === 'desc'} />\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport { GestureResponderEvent, ViewStyle } from 'react-native';\nimport * as Styled from './styles';\nimport Text from '../text';\nimport Pressable from '../pressable';\nimport SortIcon from '../sort-icon';\n\n/**\n *\n */\nexport interface HeaderCellProps {\n\tchildren?: React.ReactNode;\n\tdataKey: string | number;\n\tdefaultSortDirection?: import('./types').SortDirection;\n\t// headerCellRenderer?: import('./types').HeaderCellRenderer;\n\tlabel?: string;\n\tsort?: import('./types').Sort;\n\tsortBy?: string;\n\tsortDirection?: import('./types').SortDirection;\n\tstyle?: ViewStyle;\n\tflexGrow?: 0 | 1;\n\tflexShrink?: 0 | 1;\n\tflexBasis?: any;\n\twidth?: string;\n\tdisableSort?: boolean;\n\thideLabel?: boolean;\n}\n\n/**\n *\n */\nconst HeaderCell = ({\n\tchildren,\n\tsort,\n\tsortBy,\n\tdataKey,\n\tdefaultSortDirection = 'asc',\n\tsortDirection,\n\t// headerCellRenderer,\n\tlabel,\n\tstyle,\n\tflexGrow = 1,\n\tflexShrink = 1,\n\tflexBasis = 'auto',\n\twidth = '100%',\n\tdisableSort = false,\n\thideLabel = false,\n}: HeaderCellProps) => {\n\tconst sortable = !disableSort && typeof sort === 'function';\n\tconst showSortIndicator = sortable && sortBy === dataKey;\n\n\tconst newSortDirection =\n\t\tsortBy !== dataKey ? defaultSortDirection : sortDirection === 'desc' ? 'asc' : 'desc';\n\n\tconst handlePress = (event: GestureResponderEvent) => {\n\t\tif (typeof sort === 'function') {\n\t\t\tsort({\n\t\t\t\tdefaultSortDirection,\n\t\t\t\tevent,\n\t\t\t\tsortBy: dataKey,\n\t\t\t\tsortDirection: newSortDirection,\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Styled.HeaderCell style={[{ flexGrow, flexShrink, flexBasis, width }, style]}>\n\t\t\t{sortable ? (\n\t\t\t\t<Pressable onPress={handlePress}>\n\t\t\t\t\t{\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t({ hovered }) => (\n\t\t\t\t\t\t\t<Styled.HeaderTextWrapper>\n\t\t\t\t\t\t\t\t<Text>{children || label}</Text>\n\t\t\t\t\t\t\t\t<SortIcon\n\t\t\t\t\t\t\t\t\tvisible={hovered || showSortIndicator}\n\t\t\t\t\t\t\t\t\tdirection={showSortIndicator ? sortDirection : undefined}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Styled.HeaderTextWrapper>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Pressable>\n\t\t\t) : (\n\t\t\t\t!hideLabel && <Text>{children || label}</Text>\n\t\t\t)}\n\t\t</Styled.HeaderCell>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedHeaderCell = React.memo(HeaderCell);\nMemoizedHeaderCell.displayName = 'Table.Header.Row.Cell';\n\nexport default MemoizedHeaderCell;\n","import * as React from 'react';\nimport * as Styled from './styles';\nimport HeaderCell, { HeaderCellProps } from './header-cell';\n\ntype ColumnProps = import('./types').ColumnProps;\nexport type GetHeaderCellPropsFunction = () => HeaderCellProps & { column: ColumnProps };\n\n/**\n *\n */\nexport interface HeaderRowProps {\n\tchildren?: React.ReactNode;\n\tcolumns?: import('./types').ColumnProps[];\n\tsort?: import('./types').Sort;\n\tsortBy?: string;\n\tsortDirection?: import('./types').SortDirection;\n\tstyle?: import('react-native').ViewStyle;\n}\n\n/**\n *\n */\nconst HeaderRow = ({ columns, sort, sortBy, sortDirection, children, style }: HeaderRowProps) => {\n\treturn (\n\t\t<Styled.HeaderRow>\n\t\t\t{columns &&\n\t\t\t\tcolumns.map((column, index) => {\n\t\t\t\t\tif (column.hide) return;\n\t\t\t\t\tconst dataKey = column.key || index;\n\t\t\t\t\tconst {\n\t\t\t\t\t\tdefaultSortDirection,\n\t\t\t\t\t\tdisableSort,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tflexGrow,\n\t\t\t\t\t\tflexShrink,\n\t\t\t\t\t\tflexBasis,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\thideLabel,\n\t\t\t\t\t} = column;\n\n\t\t\t\t\tconst getHeaderCellProps: GetHeaderCellPropsFunction = () => ({\n\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\tdataKey,\n\t\t\t\t\t\tdefaultSortDirection,\n\t\t\t\t\t\tdisableSort,\n\t\t\t\t\t\tflexGrow,\n\t\t\t\t\t\tflexShrink,\n\t\t\t\t\t\tflexBasis,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t\tsortBy,\n\t\t\t\t\t\tsortDirection,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\thideLabel,\n\t\t\t\t\t\tkey: dataKey,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (typeof children === 'function') {\n\t\t\t\t\t\treturn children({ column, getHeaderCellProps });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <HeaderCell {...getHeaderCellProps()} />;\n\t\t\t\t})}\n\t\t</Styled.HeaderRow>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedHeaderRow = React.memo(HeaderRow) as unknown as React.FC<HeaderRowProps> & {\n\tCell: typeof HeaderCell;\n};\nMemoizedHeaderRow.displayName = 'Table.Header.Row';\nMemoizedHeaderRow.Cell = HeaderCell;\n\nexport default MemoizedHeaderRow;\n","import * as React from 'react';\nimport Row from './row';\n\nconst Body: React.FC = ({ children }) => {\n\treturn <>{children}</>;\n};\n\nBody.displayName = 'Table.Body';\n\nexport default Object.assign(Body, { Row });\n","import * as React from 'react';\nimport HeaderRow from './header-row';\n\nconst Header: React.FC = ({ children }) => {\n\treturn <>{children}</>;\n};\n\nHeader.displayName = 'Table.Header';\n\nexport default Object.assign(Header, { Row: HeaderRow });\n","import * as React from 'react';\nimport Text from '../text';\n\ninterface EmptyRowProps {\n\tmessage?: string;\n}\n\nconst EmptyRow = ({ message = 'No results found' }: EmptyRowProps) => {\n\treturn <Text>{message}</Text>;\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedEmptyRow = React.memo(EmptyRow);\nEmptyRow.displayName = 'Table.Row.Empty';\n\nexport default MemoizedEmptyRow;\n","import * as React from 'react';\nimport { FlatListProps, ListRenderItem } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler'; // swipeable rows?\nimport get from 'lodash/get';\nimport Row from './row';\nimport HeaderRow from './header-row';\nimport Body from './body';\nimport Header from './header';\nimport EmptyRow from './empty-row';\n\nexport interface TableProps {\n\tchildren?: React.ReactNode;\n\tcolumns: import('./types').ColumnProps[];\n\tdata: any[];\n\tempty?: string;\n\tfooter?: React.ReactElement;\n\tsort?: import('./types').Sort;\n\tsortBy?: string;\n\tsortDirection?: import('./types').SortDirection;\n\tstyle?: any;\n}\n\n/**\n * Tables rows must be onscreen for minimumViewTime to trigger onViewableItemsChanged\n */\nconst viewabilityConfig = {\n\tminimumViewTime: 500,\n\tviewAreaCoveragePercentThreshold: 0,\n};\n\n/**\n * Keeps the header row pinned to the top of the table\n */\nconst stickyHeaderIndices = [0];\n\nconst Table = ({\n\tchildren,\n\tcolumns,\n\tdata,\n\tempty,\n\tfooter,\n\tsort,\n\tsortBy,\n\tsortDirection,\n\t...rest\n}: TableProps) => {\n\tconst keyExtractor = React.useCallback(\n\t\t(item: any, index: number) => get(item, '_id') || index,\n\t\t[]\n\t);\n\tconst childCount = React.Children.count(children);\n\n\t/**\n\t * create and memoize the renderItem function\n\t */\n\tconst renderItemFunction: ListRenderItem<typeof Row> = React.useMemo(() => {\n\t\tif (Array.isArray(children) && childCount > 0) {\n\t\t\tconst child = children.find(({ type }: any) => type === Body);\n\t\t\tif (React.isValidElement(child)) {\n\t\t\t\treturn ({ item, index }) => child.props.children({ item, columns, index });\n\t\t\t}\n\t\t}\n\t\tif (typeof children === 'function') {\n\t\t\treturn ({ item, index }) => children({ item, columns, index });\n\t\t}\n\t\treturn ({ item }: any) => <Row rowData={item} columns={columns} />;\n\t}, [children, childCount, columns]);\n\n\tconst renderItem = React.useCallback(renderItemFunction, [renderItemFunction]);\n\n\t/**\n\t * create and memoize the headerComponent\n\t */\n\tconst headerComponent = React.useMemo(() => {\n\t\tif (Array.isArray(children) && childCount > 0) {\n\t\t\tconst child = children.find(({ type }: any) => type === Header);\n\t\t\tif (React.isValidElement(child)) {\n\t\t\t\treturn React.cloneElement(child.props.children, {\n\t\t\t\t\tcolumns,\n\t\t\t\t\tsort,\n\t\t\t\t\tsortBy,\n\t\t\t\t\tsortDirection,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<HeaderRow columns={columns} sort={sort} sortBy={sortBy} sortDirection={sortDirection} />\n\t\t);\n\t}, [children, childCount, columns, sort, sortBy, sortDirection]);\n\n\treturn (\n\t\t<FlatList\n\t\t\tdata={data}\n\t\t\trenderItem={renderItem}\n\t\t\tkeyExtractor={keyExtractor}\n\t\t\tListHeaderComponent={headerComponent}\n\t\t\tListFooterComponent={footer}\n\t\t\tListEmptyComponent={EmptyRow}\n\t\t\tstickyHeaderIndices={stickyHeaderIndices}\n\t\t\tviewabilityConfig={viewabilityConfig}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\n/**\n * note: statics need to be added after React.memo\n */\nconst MemoizedTable = React.memo(Table) as unknown as React.FC<TableProps> & {\n\tHeader: typeof Header;\n\tBody: typeof Body;\n};\nMemoizedTable.displayName = 'Table';\nMemoizedTable.Header = Header;\nMemoizedTable.Body = Body;\n\nexport default MemoizedTable;\n","import Table from './table';\n\nexport default Table;\n","import * as React from 'react';\nimport { View, Text, PanResponderGestureState, LayoutChangeEvent } from 'react-native';\nimport { useObservable, useObservableState, useObservableSuspense } from 'observable-hooks';\nimport { from, of } from 'rxjs';\nimport { switchMap, tap, catchError, map, filter } from 'rxjs/operators';\n// import { PanGestureHandler } from 'react-native-gesture-handler';\n// import { useAnimatedGestureHandler, useSharedValue } from 'react-native-reanimated';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport ErrorBoundary from '@wcpos/common/src/components/error-boundary';\nimport Draggable from '@wcpos/common/src/components/draggable';\nimport Gutter from '@wcpos/common/src/components/gutter';\nimport useOnLayout from '@wcpos/common/src/hooks/use-on-layout';\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport clamp from 'lodash/clamp';\nimport Cart from './cart';\nimport Products from './products';\nimport * as Styled from './styles';\n\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\n\ninterface POSContextProps {\n\tcurrentOrder?: OrderDocument;\n\tsetCurrentOrder: React.Dispatch<React.SetStateAction<OrderDocument | undefined>>;\n}\n\nexport const POSContext = React.createContext<POSContextProps>({\n\tcurrentOrder: undefined,\n\t// @ts-ignore\n\tsetCurrentOrder: undefined,\n});\n\n/**\n *\n */\nconst POS = () => {\n\tconst { storeDB } = useAppState() as { storeDB: StoreDatabase };\n\tconst productsUI = useObservableSuspense(useUIResource('posProducts'));\n\tconst cartUI = useObservableSuspense(useUIResource('cart'));\n\tconst [currentOrder, setCurrentOrder] = React.useState<OrderDocument | undefined>();\n\n\t/**\n\t * Resizing the POS columns\n\t */\n\tconst isDragging = React.useRef(false);\n\tconst productColumnWidth = useSharedValue(productsUI.get('width'));\n\tconst [containerLayout, setContainerLayout] = useOnLayout();\n\tconst [productColumnLayout, setProductColumnLayout] = useOnLayout();\n\tconst handleStartColumnResize = React.useCallback((event, context) => {\n\t\tcontext.productColumnWidth = productColumnWidth.value;\n\t}, []);\n\tconst handleColumnResize = React.useCallback(\n\t\t(event, context) => {\n\t\t\tif (productColumnLayout && containerLayout) {\n\t\t\t\tisDragging.current = true;\n\t\t\t\tproductColumnWidth.value = withSpring(\n\t\t\t\t\tclamp((productColumnLayout.width + event.translationX) / containerLayout.width, 0.2, 0.8)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconsole.log('@TODO - why null?', productColumnLayout);\n\t\t\t}\n\t\t},\n\t\t[containerLayout, productColumnLayout]\n\t);\n\tconst handleEndColumnResize = React.useCallback((event, context) => {\n\t\tisDragging.current = false;\n\t\tproductsUI.atomicPatch({ width: productColumnWidth.value });\n\t}, []);\n\tconst productsColumnStyle = useAnimatedStyle(() => ({\n\t\tflexBasis: `${productColumnWidth.value * 100}%`,\n\t}));\n\tconst handleContainerLayout = (event: LayoutChangeEvent) => {\n\t\tif (!isDragging.current) {\n\t\t\tsetContainerLayout(event);\n\t\t}\n\t};\n\tconst handleProductColumnLayout = (event: LayoutChangeEvent) => {\n\t\tif (!isDragging.current) {\n\t\t\tsetProductColumnLayout(event);\n\t\t}\n\t};\n\n\tconst orderQuery = storeDB.collections.orders.find().where('status').eq('pending');\n\n\tconst orders: OrderDocument[] = useObservableState(\n\t\torderQuery.$.pipe(\n\t\t\tfilter((o) => {\n\t\t\t\t/** @TODO - remove this hack!\n\t\t\t\t * why is orderQuery emitting on changes to order.lineItems??\n\t\t\t\t */\n\t\t\t\treturn orders?.length !== o.length;\n\t\t\t})\n\t\t),\n\t\t[]\n\t);\n\n\tuseWhyDidYouUpdate('POS', {\n\t\tstoreDB,\n\t\tproductsUI,\n\t\tcartUI,\n\t\tcurrentOrder,\n\t\torderQuery,\n\t\torders,\n\t\thandleColumnResize,\n\t\thandleStartColumnResize,\n\t\thandleEndColumnResize,\n\t\tproductsColumnStyle,\n\t\thandleContainerLayout,\n\t\thandleProductColumnLayout,\n\t});\n\n\treturn (\n\t\t<POSContext.Provider value={{ currentOrder, setCurrentOrder }}>\n\t\t\t<Styled.Container onLayout={handleContainerLayout}>\n\t\t\t\t<Styled.ProductsColumn\n\t\t\t\t\tas={Animated.View}\n\t\t\t\t\tonLayout={handleProductColumnLayout}\n\t\t\t\t\tstyle={productsColumnStyle}\n\t\t\t\t>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<React.Suspense fallback={<Text>Loading products...</Text>}>\n\t\t\t\t\t\t\t<Products ui={productsUI} storeDB={storeDB} />\n\t\t\t\t\t\t</React.Suspense>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</Styled.ProductsColumn>\n\t\t\t\t<Draggable\n\t\t\t\t\tonStart={handleStartColumnResize}\n\t\t\t\t\tonActive={handleColumnResize}\n\t\t\t\t\tonEnd={handleEndColumnResize}\n\t\t\t\t>\n\t\t\t\t\t<Animated.View>\n\t\t\t\t\t\t<Gutter />\n\t\t\t\t\t</Animated.View>\n\t\t\t\t</Draggable>\n\t\t\t\t<Styled.CartColumn>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<React.Suspense fallback={<Text>Loading cart...</Text>}>\n\t\t\t\t\t\t\t<Cart ui={cartUI} orders={orders} />\n\t\t\t\t\t\t</React.Suspense>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</Styled.CartColumn>\n\t\t\t</Styled.Container>\n\t\t</POSContext.Provider>\n\t);\n};\n\nexport default POS;\n","import styled, { css } from 'styled-components/native';\nimport Icon from '../icon';\nimport Pressable from '../pressable';\n\nexport const PressableContainer = styled(Pressable)`\n\tdisplay: flex;\n\tflex-direction: row;\n\t${({ disabled }) =>\n\t\tdisabled &&\n\t\tcss`\n\t\t\topacity: 0.5;\n\t\t`}\n`;\n\nexport const Box = styled.View<{ checked: boolean | undefined }>`\n\tflex: 0 1 auto;\n\talign-items: center;\n\tjustify-content: center;\n\tborder-style: solid;\n\tbackground-color: ${({ theme, checked }) =>\n\t\tchecked ? theme.CHECKBOX_BACKGROUND_COLOR : 'transparent'};\n\twidth: ${({ theme }) => theme.CHECKBOX_WIDTH};\n\theight: ${({ theme }) => theme.CHECKBOX_HEIGHT};\n\tborder-width: ${({ theme }) => theme.CHECKBOX_BORDER_WIDTH};\n\tborder-color: ${({ theme }) => theme.CHECKBOX_BORDER_COLOR};\n\tborder-radius: ${({ theme }) => theme.CHECKBOX_BORDER_RADIUS};\n`;\n\nexport const Check = styled(Icon)`\n\tcolor: #fff;\n`;\n\nexport const LabelWrapper = styled.View`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 0 5px;\n`;\n","import * as React from 'react';\nimport Text from '../text';\nimport { LabelWrapper } from './styles';\n\ntype Props = {\n\tlabel?: React.ReactNode;\n\tchecked?: boolean;\n\tinfo?: React.ReactNode;\n};\n\nconst Label = ({ label, checked, info }: Props) => {\n\treturn (\n\t\t<LabelWrapper>\n\t\t\t<Text>{label}</Text>\n\t\t\t{info && <Text>{info}</Text>}\n\t\t</LabelWrapper>\n\t);\n};\n\nexport default Label;\n","import * as React from 'react';\nimport { Box, Check } from './styles';\n\ntype Props = {\n\tchecked?: boolean;\n\thasError?: boolean;\n\tdisabled?: boolean;\n\tfocused?: boolean;\n\thovered?: boolean;\n\tpressed?: boolean;\n};\n\nexport default function CheckboxIcon({\n\tchecked,\n\thasError,\n\tdisabled,\n\tfocused,\n\thovered,\n\tpressed,\n}: Props) {\n\tconst errorState = hasError && !disabled && !checked;\n\tconst iconColor = disabled ? '#ccc' : '#FFFFFF';\n\treturn (\n\t\t<Box checked={checked}>\n\t\t\t{checked && <Check name=\"check\" size=\"small\" disabled={disabled} color=\"#FFF\" />}\n\t\t</Box>\n\t);\n}\n","import * as React from 'react';\nimport useUncontrolledState from '@wcpos/common/src/hooks/use-uncontrolled-state';\nimport Label from './label';\nimport Icon from './icon';\nimport * as Styled from './styles';\n\nexport interface CheckboxProps {\n\t/**\n\t * True if selected.\n\t */\n\tchecked?: boolean;\n\t/**\n\t * Label to display next to the Checkbox.\n\t */\n\tlabel: React.ReactNode;\n\t/**\n\t * Additional text to aid in use.\n\t */\n\thelpText?: React.ReactNode;\n\t/**\n\t * Disables the input.\n\t */\n\tdisabled?: boolean;\n\t/**\n\t * Called when selection state changes. Should propagate change to `checked` prop.\n\t *\n\t * If not set, component will be an uncontrolled component. @see https://reactjs.org/docs/uncontrolled-components.html\n\t */\n\tonChange?: (checked: boolean) => void;\n\n\t// helpText?: React.ReactNode;\n}\n\n/**\n * @TODO - hover, focus states\n */\nexport const Checkbox = ({\n\tlabel,\n\tdisabled,\n\thelpText,\n\tchecked: checkedRaw = false,\n\tonChange: onChangeRaw,\n}: CheckboxProps) => {\n\tconst [checked, onChange] = useUncontrolledState(checkedRaw, onChangeRaw);\n\tconst onPress = React.useCallback(() => onChange?.(!checked), [checked, onChange]);\n\n\t// const onPress = () => {\n\t// \tif (disabled) {\n\t// \t\treturn;\n\t// \t}\n\t// \tconst _checked = !checked;\n\t// \tsetChecked(_checked);\n\t// \tif (typeof onChange === 'function') {\n\t// \t\tonChange(_checked, { target: { name, checked: _checked } });\n\t// \t}\n\t// };\n\n\treturn (\n\t\t<Styled.PressableContainer disabled={disabled} onPress={onPress}>\n\t\t\t<Icon checked={checked} disabled={disabled} />\n\t\t\t<Label label={label} checked={checked} info={helpText} />\n\t\t</Styled.PressableContainer>\n\t);\n};\n","import * as React from 'react';\nimport { useObservable, useSubscription } from 'observable-hooks';\nimport { switchMap, catchError, shareReplay, first } from 'rxjs/operators';\nimport { useNavigation } from '@react-navigation/native';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\n\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\nexport interface QueryState {\n\tsearch: string;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n\tfilters?: Record<string, unknown>;\n}\n\nconst escape = (text: string) => text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\n/**\n *\n *\n * @param collectionName\n * @param initialQuery\n * @param options\n * @returns\n */\nexport const useDataObservable = (\n\tcollectionName: 'products' | 'orders' | 'customers',\n\tinitialQuery: QueryState,\n\toptions = {}\n) => {\n\tconst { storeDB } = useAppState();\n\tconst collection = storeDB?.collections[collectionName];\n\tconst [query, setQuery] = React.useState<QueryState>(initialQuery);\n\tconst navigation = useNavigation();\n\n\tif (!collection) {\n\t\tthrow Error('Collection not found');\n\t}\n\n\t/**\n\t *\n\t */\n\tconst data$ = useObservable(\n\t\t(inputs$) =>\n\t\t\tinputs$.pipe(\n\t\t\t\t// distinctUntilChanged((a, b) => a[0] === b[0]),\n\t\t\t\t// debounceTime(150),\n\t\t\t\tswitchMap(([q]) => {\n\t\t\t\t\t// const regexp = new RegExp(escape(q.search), 'i');\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst RxQuery = collection.query(q);\n\t\t\t\t\t// \t.find({\n\t\t\t\t\t// \t\tselector: {\n\t\t\t\t\t// \t\t\tdateCreatedGmt: { $regex: regexp },\n\t\t\t\t\t// \t\t},\n\t\t\t\t\t// \t})\n\t\t\t\t\t// \t// @ts-ignore\n\t\t\t\t\t// \t.sort({ [q.sortBy]: q.sortDirection });\n\t\t\t\t\treturn RxQuery.$;\n\t\t\t\t}),\n\t\t\t\tshareReplay(1),\n\t\t\t\tcatchError((err) => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\treturn err;\n\t\t\t\t})\n\t\t\t),\n\t\t[query]\n\t);\n\n\t/**\n\t *\n\t */\n\tuseSubscription(data$.pipe(first()), (result: any) => {\n\t\t// if first and empty, do an id audit\n\t\tif (result.length === 0) {\n\t\t\t// @ts-ignore\n\t\t\tcollection.audit().catch((err: any) => {\n\t\t\t\tif (err && err.response && err.response.status === 401) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tnavigation.navigate('Modal', { login: true });\n\t\t\t\t}\n\t\t\t\tconsole.warn(err);\n\t\t\t});\n\t\t}\n\t});\n\n\t/**\n\t *\n\t */\n\tReact.useEffect(() => {\n\t\t// @ts-ignore\n\t\tcollection.restApiQuery(query);\n\t}, [collection, query]);\n\n\t/**\n\t *\n\t */\n\treturn { data$, query, setQuery };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Popover from '@wcpos/common/src/components/popover';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\nimport Button from '@wcpos/common/src/components/button';\nimport Text from '@wcpos/common/src/components/text';\n\ninterface UiSettingsProps {\n\tui: import('@wcpos/common/src/hooks/use-ui/use-ui').UIDocument;\n}\n\nconst UiSettings = ({ ui }: UiSettingsProps) => {\n\tconst { t } = useTranslation();\n\tconst key = ui.id.split('_')[1];\n\tconst columns = ui.get('columns');\n\tconst [visible, setVisible] = React.useState(false);\n\n\treturn (\n\t\t<Popover\n\t\t\topen={visible}\n\t\t\tactivator={<Icon name=\"cog\" onPress={() => setVisible(true)} />}\n\t\t\tonRequestClose={() => setVisible(false)}\n\t\t>\n\t\t\t<Text>Columns</Text>\n\t\t\t{columns.map((column: any, index: number) => {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tkey={column.key}\n\t\t\t\t\t\t\tlabel={t(`${key}.column.label.${column.key}`)}\n\t\t\t\t\t\t\tchecked={!column.hide}\n\t\t\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\t\t\tcolumns[index] = { ...column, hide: !checked };\n\t\t\t\t\t\t\t\tui.atomicSet('columns', columns);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{column.display\n\t\t\t\t\t\t\t? column.display.map((display: any, i: number) => (\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-indent\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tkey={display.key}\n\t\t\t\t\t\t\t\t\t\tlabel={t(`${key}.column.label.${display.key}`)}\n\t\t\t\t\t\t\t\t\t\tchecked={!display.hide}\n\t\t\t\t\t\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\t\t\t\t\t\tcolumn.display[i] = { ...display, hide: !checked };\n\t\t\t\t\t\t\t\t\t\t\tui.atomicSet('columns', columns);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<Button title=\"Restore Default Settings\" onPress={ui.reset} />\n\t\t</Popover>\n\t);\n};\n\nexport default UiSettings;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\tflex-direction: row;\n\twidth: 100%;\n\talign-items: center;\n`;\n\nexport const Input = styled.View`\n\tflex: 1;\n`;\n\nexport const Actions = styled.View`\n\tflex-direction: row;\n`;\n","import * as React from 'react';\nimport TextInput from '../textinput';\nimport Icon from '../icon';\nimport Tag from '../tag';\nimport * as Styled from './styles';\n\n/**\n *\n */\nexport type SearchActionsProps = {\n\t/**\n\t *\n\t */\n\taction: () => void;\n} & Pick<import('../icon/icon').IconProps, 'name'>; // pass-through props\n\n/**\n *\n */\nexport type SearchFiltersProps = {\n\t/**\n\t *\n\t */\n\tlabel: string;\n} & Pick<import('../tag/tag').TagProps, 'onRemove'>; // pass-through props\n\n/**\n *\n */\nexport type SearchProps = {\n\t/**\n\t * Pass-through to TextInput onChange prop\n\t */\n\tonSearch: (value: string) => void;\n\t/**\n\t * Buttons displayed to the right of the search field\n\t */\n\tactions?: (SearchActionsProps | React.ReactElement)[];\n\t/**\n\t * Tags displayed in the search field\n\t */\n\tfilters?: SearchFiltersProps[];\n} & Pick<\n\timport('../textinput/textinput').TextInputProps,\n\t'label' | 'value' | 'onClear' | 'placeholder'\n>; // pass-through props\n\n/**\n *\n */\nexport const Search = ({ actions, onSearch, filters, ...rest }: SearchProps) => {\n\tconst renderFilters = React.useMemo(() => {\n\t\tif (filters) {\n\t\t\treturn filters.map(({ label: filterLabel, onRemove }) => (\n\t\t\t\t<Tag removable onRemove={onRemove}>\n\t\t\t\t\t{filterLabel}\n\t\t\t\t</Tag>\n\t\t\t));\n\t\t}\n\t\treturn undefined;\n\t}, [filters]);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Styled.Input>\n\t\t\t\t<TextInput\n\t\t\t\t\thideLabel\n\t\t\t\t\tclearable\n\t\t\t\t\tonChange={onSearch}\n\t\t\t\t\tleftAccessory={renderFilters}\n\t\t\t\t\t{...rest}\n\t\t\t\t/>\n\t\t\t</Styled.Input>\n\t\t\t{actions && (\n\t\t\t\t<Styled.Actions>\n\t\t\t\t\t{actions.map((action) => {\n\t\t\t\t\t\tif (React.isValidElement(action)) {\n\t\t\t\t\t\t\treturn action;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn <Icon name={action.name} onPress={action.action} />;\n\t\t\t\t\t})}\n\t\t\t\t</Styled.Actions>\n\t\t\t)}\n\t\t</Styled.Container>\n\t);\n};\n","// import * as React from 'react';\nimport { tap, filter } from 'rxjs/operators';\nimport { ObservableResource } from 'observable-hooks';\nimport useAppState from '../use-app-state';\nimport initialUI from './ui-initial.json';\n\ninterface UiDisplay {\n\tkey: string;\n\thide: boolean;\n\torder: number;\n}\n\ninterface UiColumn {\n\tkey: string;\n\tdisableSort: boolean;\n\torder: number;\n\twidth: string;\n\thide: boolean;\n\thideLabel: boolean;\n\tdisplay: UiDisplay[];\n}\n\ninterface UISchema {\n\tsortBy: string;\n\tsortDirection: import('@wcpos/common/src/components/table/types').SortDirection;\n\twidth: number;\n\tcolumns: UiColumn[];\n}\n\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\nexport type UIDocument = import('rxdb').RxLocalDocument<UISchema>;\nexport type UIResource = import('observable-hooks').ObservableResource<UIDocument>;\n\ninterface IUIResources {\n\tposProducts?: UIResource;\n\tcart?: UIResource;\n\tproducts?: UIResource;\n\torders?: UIResource;\n\tcustomers?: UIResource;\n}\n\nconst uiResources: IUIResources = {\n\tposProducts: undefined,\n\tcart: undefined,\n\tproducts: undefined,\n\torders: undefined,\n\tcustomers: undefined,\n};\n\n/**\n *\n * @param key\n */\nexport const useUI = (key: Extract<keyof IUIResources, string>) => {\n\tconst { storeDB } = useAppState() as { storeDB: StoreDatabase };\n\n\tif (uiResources[key]) {\n\t\treturn uiResources[key] as UIResource;\n\t}\n\n\tconst ui$ = storeDB.getLocal$(`ui_${key}`).pipe(\n\t\tfilter((uiDoc) => {\n\t\t\tif (!uiDoc && initialUI[key]) {\n\t\t\t\tstoreDB.insertLocal(`ui_${key}`, initialUI[key]);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// add helper function to reset the ui settings\n\t\t\tuiDoc.reset = () => {\n\t\t\t\tstoreDB.upsertLocal(`ui_${key}`, initialUI[key]);\n\t\t\t};\n\t\t\treturn uiDoc;\n\t\t})\n\t);\n\n\tuiResources[key] = new ObservableResource(ui$);\n\treturn uiResources[key] as UIResource;\n};\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Table from '@wcpos/common/src/components/table';\nimport Text from '@wcpos/common/src/components/text';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n\nexport type ColumnProps = import('@wcpos/common/src/components/table/types').ColumnProps;\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\ntype CellRenderProps = {\n\tcellData: any;\n\tcolumn: ColumnProps;\n\tgetCellProps: GetCellPropsFunction;\n};\nexport type ItemProp =\n\t| import('@wcpos/common/src/database').ProductDocument\n\t| import('@wcpos/common/src/database').OrderDocument\n\t| import('@wcpos/common/src/database').CustomerDocument;\nexport type CellsProp = Record<\n\tstring,\n\tReact.FunctionComponent<{ item: any; column: any; setQuery?: any }>\n>;\n\ninterface CommonRowProps {\n\titem: ItemProp;\n\tcolumns: ColumnProps[];\n\tcells: CellsProp;\n\tsetQuery: any;\n}\n\n// @ts-ignore\nconst DefaultCell = ({ item, column }) => {\n\treturn <Text>{String(item[column.key])}</Text>;\n};\n\n/**\n *\n */\nconst CommonRow = ({ item, columns, cells, setQuery }: CommonRowProps) => {\n\tconst forceRender = useObservableState(item.$);\n\tuseWhyDidYouUpdate('Common Table Row', { forceRender, item, columns, cells });\n\n\treturn (\n\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t{({ column, getCellProps }: CellRenderProps): React.ReactElement => {\n\t\t\t\tconst Cell = cells[column.key] ? cells[column.key] : DefaultCell;\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t<Cell item={item} column={column} setQuery={setQuery} />\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default React.memo(CommonRow);\n","import * as React from 'react';\nimport { Observable } from 'rxjs';\nimport { useObservableState } from 'observable-hooks';\nimport { useTranslation } from 'react-i18next';\nimport _flatten from 'lodash/flatten';\nimport _orderBy from 'lodash/orderBy';\nimport Table from '@wcpos/common/src/components/table';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Row, { CellsProp, ItemProp, ColumnProps } from './row';\n\ntype Sort = import('@wcpos/common/src/components/table/types').Sort;\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\n\ninterface CommonTableProps {\n\tcollection: any;\n\tcolumns: ColumnProps[];\n\tdata$: Observable<ItemProp[]>;\n\tsetQuery: any;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n\tcells: CellsProp;\n}\n\ntype GetHeaderCellPropsFunction =\n\timport('@wcpos/common/src/components/table/header-row').GetHeaderCellPropsFunction;\n\n/**\n *\n */\nconst CommonTable = ({\n\tcollection,\n\tcolumns,\n\tdata$,\n\tsetQuery,\n\tsortBy: _sortBy,\n\tsortDirection: _sortDirection,\n\tcells,\n}: CommonTableProps) => {\n\tconst { t } = useTranslation();\n\tconst data = useObservableState(data$, []);\n\t// const syncState = React.useRef<number[]>([]);\n\n\tconst handleSort: Sort = React.useCallback(\n\t\t({ sortBy, sortDirection }) => {\n\t\t\t// @ts-ignore\n\t\t\tsetQuery((prev) => ({ ...prev, sortBy, sortDirection }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t * maybe in memory sort\n\t */\n\tconst maybeSortedData = React.useMemo(() => {\n\t\tconst indexes = _flatten(collection.schema.indexes);\n\t\tif (!indexes.includes(_sortBy)) {\n\t\t\treturn _orderBy(data, [_sortBy], [_sortDirection]);\n\t\t}\n\t\treturn data;\n\t}, [_sortBy, _sortDirection, collection.schema.indexes, data]);\n\n\t/**\n\t *\n\t */\n\tconst getItemLayout = React.useCallback(\n\t\t(d, index) => ({ length: 100, offset: 100 * index, index }),\n\t\t[]\n\t);\n\n\tuseWhyDidYouUpdate('Common Table', {\n\t\tcollection,\n\t\tcolumns,\n\t\tdata,\n\t\tmaybeSortedData,\n\t\tsetQuery,\n\t\t_sortBy,\n\t\t_sortDirection,\n\t\tcells,\n\t\t// syncingCustomers,\n\t\tt,\n\t});\n\n\treturn (\n\t\t<Table\n\t\t\tcolumns={columns}\n\t\t\tdata={maybeSortedData}\n\t\t\tsort={handleSort}\n\t\t\tsortBy={_sortBy}\n\t\t\tsortDirection={_sortDirection}\n\t\t\t// // @ts-ignore\n\t\t\t// onViewableItemsChanged={handleVieweableItemsChanged}\n\t\t\t// @ts-ignore\n\t\t\tgetItemLayout={getItemLayout}\n\t\t>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row>\n\t\t\t\t\t{({ getHeaderCellProps }: { getHeaderCellProps: GetHeaderCellPropsFunction }) => {\n\t\t\t\t\t\tconst { column } = getHeaderCellProps();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell {...getHeaderCellProps()}>\n\t\t\t\t\t\t\t\t{t(`${collection.name}.column.label.${column.key}`)}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n\t\t\t\t{({ item }: { item: any }) => (\n\t\t\t\t\t<Row item={item} columns={columns} cells={cells} setQuery={setQuery} />\n\t\t\t\t)}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default React.memo(CommonTable);\n","import * as React from 'react';\nimport Tag from '@wcpos/common/src/components/tag';\nimport set from 'lodash/set';\n\ninterface ProductCategoriesProps {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n\tsetQuery?: any;\n}\n\nconst ProductCategories = ({ item: product, setQuery }: ProductCategoriesProps) => {\n\tconst { categories } = product;\n\n\t/**\n\t *\n\t */\n\tconst handleSelectCategory = React.useCallback(\n\t\t(category: any) => {\n\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.category', category));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t *\n\t */\n\tconst tagsArray = React.useMemo(() => {\n\t\tif (Array.isArray(categories)) {\n\t\t\treturn categories.map((cat: any) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: cat.id,\n\t\t\t\t\tlabel: cat.name,\n\t\t\t\t\taction: () => handleSelectCategory(cat),\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}, [categories, handleSelectCategory]);\n\n\t/**\n\t *\n\t */\n\treturn categories ? <Tag.Group tags={tagsArray} /> : <Tag.Group.Skeleton numberOfTags={2} />;\n};\n\nexport default ProductCategories;\n","import * as React from 'react';\nimport Tag from '@wcpos/common/src/components/tag';\nimport set from 'lodash/set';\n\ntype ProductTagsProps = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n\tsetQuery?: any;\n};\n\nconst ProductTags = ({ item: product, setQuery }: ProductTagsProps) => {\n\tconst { tags } = product;\n\n\t/**\n\t *\n\t */\n\tconst handleSelectTag = React.useCallback(\n\t\t(tag: any) => {\n\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.tag', tag));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t *\n\t */\n\tconst tagsArray = React.useMemo(() => {\n\t\tif (Array.isArray(tags)) {\n\t\t\treturn tags.map((tag: any) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: tag.id,\n\t\t\t\t\tlabel: tag.name,\n\t\t\t\t\taction: () => handleSelectTag(tag),\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}, [tags, handleSelectTag]);\n\n\t/**\n\t *\n\t */\n\treturn tags ? <Tag.Group tags={tagsArray} /> : <Tag.Group.Skeleton numberOfTags={2} />;\n};\n\nexport default ProductTags;\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Animated, {\n\tuseAnimatedGestureHandler,\n\tuseSharedValue,\n\tuseAnimatedStyle,\n\twithSpring,\n} from 'react-native-reanimated';\nimport { PanGestureHandler, PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\n\nconst clamp = (value: number, lowerBound: number, upperBound: number) => {\n\t'worklet';\n\n\treturn Math.min(Math.max(lowerBound, value), upperBound);\n};\n\nexport interface DraggableProps {\n\tchildren: React.ReactNode;\n\t/**\n\t *\n\t */\n\tonStart?: (event: PanGestureHandlerGestureEvent, ctx: Record<string, unknown>) => void;\n\t/**\n\t *\n\t */\n\tonActive?: (event: PanGestureHandlerGestureEvent, ctx: Record<string, unknown>) => void;\n\t/**\n\t *\n\t */\n\tonEnd?: (event: PanGestureHandlerGestureEvent, ctx: Record<string, unknown>) => void;\n\tminX?: number;\n\tminY?: number;\n\tmaxX?: number;\n\tmaxY?: number;\n}\n\nexport const Draggable = ({\n\tchildren,\n\tonStart,\n\tonActive,\n\tonEnd,\n\tminX,\n\tminY,\n\tmaxX,\n\tmaxY,\n}: DraggableProps) => {\n\tconst onGestureEvent = useAnimatedGestureHandler<\n\t\tPanGestureHandlerGestureEvent,\n\t\t{ x: number; y: number }\n\t>({\n\t\tonStart(event, ctx) {\n\t\t\tif (onStart) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tonStart(event, ctx);\n\t\t\t}\n\t\t},\n\t\tonActive(event, ctx) {\n\t\t\tif (onActive) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tonActive(event, ctx);\n\t\t\t}\n\t\t},\n\t\tonEnd(event, ctx) {\n\t\t\tif (onEnd) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tonEnd(event, ctx);\n\t\t\t}\n\t\t},\n\t});\n\n\treturn <PanGestureHandler onGestureEvent={onGestureEvent}>{children}</PanGestureHandler>;\n};\n\nexport default Draggable;\n","export { Draggable as default } from './draggable';\n","import * as React from 'react';\nimport { LayoutRectangle, ViewProps } from 'react-native';\n\n/**\n * Custom hook to use with `View.onLayout` to get layout of View.\n */\nexport const useOnLayout = (): [LayoutRectangle | null, Required<ViewProps>['onLayout']] => {\n\tconst [layout, setLayout] = React.useState<LayoutRectangle | null>(null);\n\n\tconst onLayout = React.useCallback<Required<ViewProps>['onLayout']>(\n\t\t({ nativeEvent }) => {\n\t\t\tsetLayout(nativeEvent.layout);\n\t\t},\n\t\t[setLayout]\n\t);\n\n\treturn [layout, onLayout];\n};\n\nexport default useOnLayout;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n\nexport const ProductsColumn = styled.View`\n\theight: 100%;\n\tflex-grow: 0;\n\tflex-shrink: 0;\n\tflex-basis: 60%;\n`;\n\nexport const CartColumn = styled.View`\n\theight: 100%;\n\tflex: 1;\n`;\n","/**\n * Get Object type.\n * @param obj {*} object to get type\n * @returns {*}\n */\nfunction getObjectType(obj: any) {\n\tif (\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\t!Array.isArray(obj) &&\n\t\ttypeof obj[Symbol.iterator] === 'function'\n\t) {\n\t\treturn 'Iterable';\n\t}\n\treturn Object.prototype.toString.call(obj).slice(8, -1);\n}\n\n/**\n * Parse.\n * @param string {String} string to parse\n * @returns {*}\n */\nfunction parse(string: string) {\n\tlet result = string;\n\n\t// Check if string contains 'function' and start with it to eval it\n\tif (result.indexOf('function') === 0) {\n\t\treturn eval(`(${result})`); // eslint-disable-line no-eval\n\t}\n\n\ttry {\n\t\tresult = JSON.parse(string);\n\t} catch (e) {\n\t\t// Error\n\t}\n\treturn result;\n}\n\nexport { getObjectType, parse };\n","import styled from 'styled-components/native';\nimport Pressable from '../pressable';\nimport { Text } from '../text/styles';\n\nexport const Container = styled.View``;\n\nexport const Display = styled.View`\n\tflex-direction: row;\n`;\n\nexport const DisplayText = styled(Text)`\n\tflex: 1;\n`;\n\nexport const Keys = styled.View`\n\tjustify-content: space-between;\n\tflex-wrap: wrap;\n\tflex-direction: row;\n`;\n\nexport const Key = styled(Pressable)`\n\tflex-grow: 1;\n\tflex-shrink: 0;\n\tflex-basis: 30%;\n\talign-items: center;\n\tmargin: 1px;\n`;\n\nexport const KeyText = styled(Text)``;\n","import * as React from 'react';\nimport Icon from '../icon';\nimport * as Styled from './styles';\n\nexport interface NumpadProps {\n\tdisplay?: 'below' | 'center' | 'bottom' | 'inline';\n\tplaceholder?: string;\n}\n\nconst keys = ['7', '8', '9', '4', '5', '6', '1', '2', '3', '-', '0', '.'];\n\nexport const Numpad = ({ display = 'below', placeholder = '0' }: NumpadProps) => {\n\tconst [displayText, setDisplayText] = React.useState(placeholder);\n\n\tconst handleKeyPress = (key: string) => {\n\t\tsetDisplayText(displayText + key);\n\t};\n\n\tconst handleBackspace = () => {\n\t\tsetDisplayText(displayText);\n\t};\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Styled.Display>\n\t\t\t\t<Styled.DisplayText>{displayText}</Styled.DisplayText>\n\t\t\t\t<Icon name=\"backspace\" onPress={handleBackspace} />\n\t\t\t</Styled.Display>\n\t\t\t<Styled.Keys>\n\t\t\t\t{keys.map((key) => (\n\t\t\t\t\t<Styled.Key key={`button-${key}`} onPress={() => handleKeyPress(key)}>\n\t\t\t\t\t\t<Styled.KeyText>{key}</Styled.KeyText>\n\t\t\t\t\t</Styled.Key>\n\t\t\t\t))}\n\t\t\t</Styled.Keys>\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Popover from '@wcpos/common/src/components/popover';\nimport Numpad from '@wcpos/common/src/components/numpad';\n\ninterface Props {\n\tlineItem: import('@wcpos/common/src/database').LineItemDocument;\n}\n\nconst Quantity = ({ lineItem }: Props) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst quantity = useObservableState(lineItem.quantity$, lineItem.quantity);\n\n\tconst handleChangeText = async (newValue: string): Promise<void> => {\n\t\tlineItem.atomicPatch({ quantity: Number(newValue) });\n\t};\n\n\treturn (\n\t\t<Popover\n\t\t\topen={visible}\n\t\t\tonRequestClose={() => setVisible(false)}\n\t\t\tactivator={\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"Quantity\"\n\t\t\t\t\thideLabel\n\t\t\t\t\tautosize\n\t\t\t\t\tvalue={String(quantity)}\n\t\t\t\t\tonChange={handleChangeText}\n\t\t\t\t\tonFocus={() => setVisible(true)}\n\t\t\t\t/>\n\t\t\t}\n\t\t>\n\t\t\t<Numpad placeholder={String(quantity)} />\n\t\t</Popover>\n\t);\n};\n\nexport default Quantity;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport TextInput from '@wcpos/common/src/components/textinput';\n\ninterface Props {\n\tlineItem: import('@wcpos/common/src/database').LineItemDocument;\n}\n\nconst Price = ({ lineItem }: Props) => {\n\tconst price = useObservableState(lineItem.price$, lineItem.price);\n\n\tconst handleChange = async (newValue: string): Promise<void> => {\n\t\tlineItem.atomicPatch({ price: Number(newValue) });\n\t};\n\n\treturn (\n\t\t<TextInput label=\"Price\" hideLabel autosize value={String(price)} onChange={handleChange} />\n\t);\n};\n\nexport default Price;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Text from '@wcpos/common/src/components/text';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n\ninterface Props {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n\ttype?: 'total' | 'subtotal';\n}\n\nconst Total = ({ item, type = 'total' }: Props) => {\n\tconst total = useObservableState(item[`${type}$`], item[type]);\n\tuseWhyDidYouUpdate('CartLineItemTotal', { item, total });\n\n\treturn <Text>{total}</Text>;\n};\n\nexport default Total;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Text from '@wcpos/common/src/components/text';\n\ninterface Props {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n\ttype?: 'totalTax' | 'subtotalTax';\n}\n\nconst Tax = ({ item, type = 'totalTax' }: Props) => {\n\tconst tax = useObservableState(item[`${type}$`], item[type]);\n\treturn <Text>{tax}</Text>;\n};\n\nexport default Tax;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View``;\n\nexport const Row = styled.View`\n\tflex-direction: row;\n`;\n\nexport const Cell = styled.View`\n\tflex: 1;\n\tpadding: 5px;\n`;\n","import * as React from 'react';\nimport TextInput from '../textinput';\nimport Icon from '../icon';\nimport * as Styled from './styles';\n\nexport interface MetaDataProps {\n\tdata: { id: number; key: string; value: string }[];\n}\n\nexport const MetaData = ({ data }: MetaDataProps) => {\n\tconst handleAddRow = () => {\n\t\tconsole.log('hi');\n\t};\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{data?.map((meta) => (\n\t\t\t\t<Styled.Row key={meta.key}>\n\t\t\t\t\t<Styled.Cell>\n\t\t\t\t\t\t<TextInput label=\"Key\" value={meta.key} />\n\t\t\t\t\t</Styled.Cell>\n\t\t\t\t\t<Styled.Cell>\n\t\t\t\t\t\t<TextInput label=\"Value\" value={meta.value} />\n\t\t\t\t\t</Styled.Cell>\n\t\t\t\t\t<Icon name=\"add\" onPress={handleAddRow} />\n\t\t\t\t</Styled.Row>\n\t\t\t))}\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Select from '@wcpos/common/src/components/select';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\nimport MetaData from '@wcpos/common/src/components/meta-data';\n\nexport interface EditModalProps {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n\tonClose: () => void;\n}\n\nconst EditModal = ({ item, onClose }: EditModalProps) => {\n\tuseObservableState(item.$); // re-render\n\n\tconst handleChangeTaxClass = async (newValue: string): Promise<void> => {\n\t\titem.atomicPatch({ taxClass: newValue });\n\t};\n\n\tconst hasProperty = (property: string) => {\n\t\treturn item.collection.schema.topLevelFields.includes(property);\n\t};\n\n\treturn (\n\t\t<Dialog\n\t\t\ttitle={item.name || item.methodTitle}\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{ label: 'Save', action: onClose }}\n\t\t>\n\t\t\t<Dialog.Section>\n\t\t\t\t{hasProperty('name') && <TextInput label=\"Name\" value={item.name} />}\n\t\t\t\t{hasProperty('taxStatus') && (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tlabel=\"Taxable\"\n\t\t\t\t\t\tchecked={item.taxStatus === 'taxable'}\n\t\t\t\t\t\tonChange={(value) => item.atomicPatch({ taxStatus: value ? 'taxable' : 'none' })}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{hasProperty('taxClass') && (\n\t\t\t\t\t<TextInput label=\"Tax Class\" value={item.taxClass} onChange={handleChangeTaxClass} />\n\t\t\t\t)}\n\t\t\t\t<MetaData\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdata={item.metaData}\n\t\t\t\t/>\n\t\t\t</Dialog.Section>\n\t\t</Dialog>\n\t);\n};\n\nexport default EditModal;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Icon from '@wcpos/common/src/components/icon';\nimport { useSnackbar } from '@wcpos/common/src/components/snackbar/use-snackbar';\nimport { POSContext } from '../../../pos';\nimport EditModal from './edit-modal';\n\ninterface ActionProps {\n\titem:\n\t\t| import('@wcpos/common/src/database').LineItemDocument\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n}\n\nconst Actions = ({ item }: ActionProps) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst { currentOrder } = React.useContext(POSContext);\n\tconst undoFeeRemove = () => {\n\t\tconsole.log('Undo remove', item);\n\t};\n\n\tconst showSnackbar = useSnackbar({\n\t\tmessage: 'Item removed',\n\t\tdismissable: true,\n\t\taction: { label: 'Undo', action: undoFeeRemove },\n\t});\n\n\tconst handleRemove = () => {\n\t\tcurrentOrder?.removeCartLine(item);\n\t\tshowSnackbar();\n\t};\n\n\treturn (\n\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t<Icon name=\"more-vert\" size=\"large\" onPress={() => setVisible(true)} />\n\t\t\t<Icon name=\"remove\" size=\"large\" onPress={handleRemove} />\n\t\t\t{visible && <EditModal item={item} onClose={() => setVisible(false)} />}\n\t\t</View>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport { SnackbarOptions, SnackbarContext } from './snackbar-provider';\n\n/**\n * Get a function for showing a Snackbar with the specified options.\n *\n * Simply call the function to show the Snackbar, which will be automatically\n * dismissed.\n *\n * @example\n * const showSnackbar = useSnackbar({ message: 'This is a Snackbar!' })\n * <Button onClick={showSnackbar}>Show Snackbar!</Button>\n */\nexport const useSnackbar = (options: SnackbarOptions): (() => void) => {\n\tconst context = React.useContext(SnackbarContext);\n\n\treturn React.useCallback(() => context.show(options), [context, options]);\n};\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Quantity from './cells/quantity';\nimport Price from './cells/price';\nimport Total from './cells/total';\nimport Tax from './cells/tax';\nimport Actions from './cells/actions';\n\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\n\ninterface Props {\n\t// order: import('@wcpos/common/src/database').OrderDocument;\n\titem: import('@wcpos/common/src/database').LineItemDocument;\n\tcolumns: any;\n}\n\nconst LineItem = ({ item, columns }: Props) => {\n\tuseWhyDidYouUpdate('CartLineItem', { item, columns });\n\n\treturn (\n\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t{({ getCellProps }: { getCellProps: GetCellPropsFunction }) => {\n\t\t\t\tconst { cellData, column } = getCellProps();\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t{((): React.ReactElement | null => {\n\t\t\t\t\t\t\tswitch (column.key) {\n\t\t\t\t\t\t\t\tcase 'quantity':\n\t\t\t\t\t\t\t\t\treturn <Quantity lineItem={item} />;\n\t\t\t\t\t\t\t\tcase 'price':\n\t\t\t\t\t\t\t\t\treturn <Price lineItem={item} />;\n\t\t\t\t\t\t\t\tcase 'subtotalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={item} type=\"subtotalTax\" />;\n\t\t\t\t\t\t\t\tcase 'subtotal':\n\t\t\t\t\t\t\t\t\treturn <Total item={item} type=\"subtotal\" />;\n\t\t\t\t\t\t\t\tcase 'totalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={item} />;\n\t\t\t\t\t\t\t\tcase 'total':\n\t\t\t\t\t\t\t\t\treturn <Total item={item} />;\n\t\t\t\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\t\t\t\treturn <Actions item={item} />;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default LineItem;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport TextInput from '@wcpos/common/src/components/textinput';\n\ninterface Props {\n\titem:\n\t\t| import('@wcpos/common/src/database').FeeLineDocument\n\t\t| import('@wcpos/common/src/database').ShippingLineDocument;\n}\n\nconst FeeAndShippingPrice = ({ item }: Props) => {\n\tconst price = useObservableState(item.total$, item.total);\n\n\tconst handleChange = async (newValue: string): Promise<void> => {\n\t\titem.atomicPatch({ total: newValue });\n\t};\n\n\treturn <TextInput label=\"Price\" hideLabel autosize value={price} onChange={handleChange} />;\n};\n\nexport default FeeAndShippingPrice;\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport Price from './cells/fee-and-shipping-price';\nimport Tax from './cells/tax';\nimport Actions from './cells/actions';\n\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\n\ninterface Props {\n\t// order: import('@wcpos/common/src/database').OrderDocument;\n\tfee: import('@wcpos/common/src/database').FeeLineDocument;\n\tcolumns: any;\n}\n\nconst FeeLine = ({ fee, columns }: Props) => {\n\treturn (\n\t\t<Table.Body.Row rowData={fee} columns={columns}>\n\t\t\t{({ getCellProps }: { getCellProps: GetCellPropsFunction }) => {\n\t\t\t\tconst { cellData, column } = getCellProps();\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t{((): React.ReactElement | null => {\n\t\t\t\t\t\t\tswitch (column.key) {\n\t\t\t\t\t\t\t\tcase 'quantity':\n\t\t\t\t\t\t\t\t\treturn <></>;\n\t\t\t\t\t\t\t\tcase 'price':\n\t\t\t\t\t\t\t\t\treturn <Price item={fee} />;\n\t\t\t\t\t\t\t\tcase 'totalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={fee} />;\n\t\t\t\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\t\t\t\treturn <Actions item={fee} />;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default FeeLine;\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport Text from '@wcpos/common/src/components/text';\nimport Price from './cells/fee-and-shipping-price';\nimport Tax from './cells/tax';\nimport Actions from './cells/actions';\n\ntype GetCellPropsFunction = import('@wcpos/common/src/components/table/row').GetCellPropsFunction;\n\ninterface Props {\n\t// order: import('@wcpos/common/src/database').OrderDocument;\n\tshipping: import('@wcpos/common/src/database').ShippingLineDocument;\n\tcolumns: any;\n}\n\nconst ShippingLine = ({ shipping, columns }: Props) => {\n\treturn (\n\t\t<Table.Body.Row rowData={shipping} columns={columns}>\n\t\t\t{({ getCellProps }: { getCellProps: GetCellPropsFunction }) => {\n\t\t\t\tconst { cellData, column } = getCellProps();\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Body.Row.Cell {...getCellProps()}>\n\t\t\t\t\t\t{((): React.ReactElement | null => {\n\t\t\t\t\t\t\tswitch (column.key) {\n\t\t\t\t\t\t\t\tcase 'quantity':\n\t\t\t\t\t\t\t\t\treturn <></>;\n\t\t\t\t\t\t\t\tcase 'price':\n\t\t\t\t\t\t\t\t\treturn <Price item={shipping} />;\n\t\t\t\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t\t\t\treturn <Text>{shipping.methodTitle}</Text>;\n\t\t\t\t\t\t\t\tcase 'totalTax':\n\t\t\t\t\t\t\t\t\treturn <Tax item={shipping} />;\n\t\t\t\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\t\t\t\treturn <Actions item={shipping} />;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nexport default ShippingLine;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\nimport Button from '@wcpos/common/src/components/button';\nimport Text from '@wcpos/common/src/components/text';\nimport Popover from '@wcpos/common/src/components/popover';\nimport Icon from '@wcpos/common/src/components/icon';\n\ninterface CartActionsProps {\n\tui: any;\n\tcolumns: any[];\n}\n\n/**\n *\n */\nconst Actions = ({ columns, ui }: CartActionsProps) => {\n\tconst [t] = useTranslation();\n\tconst [visible, setVisible] = React.useState(false);\n\n\treturn (\n\t\t<Popover\n\t\t\thideBackdrop\n\t\t\topen={visible}\n\t\t\tonRequestClose={() => setVisible(false)}\n\t\t\tactivator={<Icon name=\"cog\" onPress={() => setVisible(true)} />}\n\t\t>\n\t\t\t<Text>Columns</Text>\n\t\t\t{columns.map((column: any, index) => (\n\t\t\t\t<Checkbox\n\t\t\t\t\tkey={column.key}\n\t\t\t\t\tlabel={t(`cart.column.label.${column.key}`)}\n\t\t\t\t\tchecked={!column.hide}\n\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\t// ui.updateColumn(column.key, { hide: !checked });\n\t\t\t\t\t\t// column.updateWithJson({ hide: !checked });\n\t\t\t\t\t\tcolumns[index] = { ...column, hide: !checked };\n\t\t\t\t\t\tui.atomicSet('columns', columns);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t{/* <Text>Display</Text>\n\t\t\t{display.map((d: any, index) => (\n\t\t\t\t<Checkbox\n\t\t\t\t\tkey={d.key}\n\t\t\t\t\tname={d.key}\n\t\t\t\t\tlabel={t(`pos_products.display.label.${d.key}`)}\n\t\t\t\t\tchecked={!d.hide}\n\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\t// ui.updateDisplay(d.key, { hide: !checked });\n\t\t\t\t\t\t// d.updateWithJson({ hide: !checked });\n\t\t\t\t\t\tdisplay[index] = { ...d, hide: !checked };\n\t\t\t\t\t\tui.atomicSet('display', display);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t))} */}\n\t\t\t<Button\n\t\t\t\ttitle=\"Restore Default Settings\"\n\t\t\t\tonPress={() => {\n\t\t\t\t\tui.reset();\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Popover>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport { useObservable, useObservableState } from 'observable-hooks';\nimport { from, of, combineLatest, zip, Observable } from 'rxjs';\nimport { switchMap, tap, catchError, map } from 'rxjs/operators';\nimport { useTranslation } from 'react-i18next';\nimport orderBy from 'lodash/orderBy';\nimport Table from '@wcpos/common/src/components/table';\nimport Text from '@wcpos/common/src/components/text';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Button from '@wcpos/common/src/components/button';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport LineItem from './rows/line-item';\nimport FeeLine from './rows/fee-line';\nimport ShippingLine from './rows/shipping-line';\nimport TableSettings from './actions';\n\ntype ColumnProps = import('@wcpos/common/src/components/table/types').ColumnProps;\ntype Sort = import('@wcpos/common/src/components/table/types').Sort;\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\ntype GetHeaderCellPropsFunction =\n\timport('@wcpos/common/src/components/table/header-row').GetHeaderCellPropsFunction;\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ntype LineItemDocument = import('@wcpos/common/src/database').LineItemDocument;\ntype FeeLineDocument = import('@wcpos/common/src/database').FeeLineDocument;\ntype ShippingLineDocument = import('@wcpos/common/src/database').ShippingLineDocument;\n\ninterface ICartTableProps {\n\tcolumns: ColumnProps[];\n\titems: any;\n\tquery: any;\n\tonSort: Sort;\n\tui: any;\n}\n\nconst CartTable = ({ columns, items, query, onSort, ui }: ICartTableProps) => {\n\tconst { t } = useTranslation();\n\n\t// const items$ = useObservable(\n\t// \t(inputs$) =>\n\t// \t\tinputs$.pipe(\n\t// \t\t\t// @ts-ignore\n\t// \t\t\tswitchMap(([o, q]) => o.getCart$(q))\n\t// \t\t),\n\t// \t[order, query]\n\t// ) as Observable<any[]>;\n\n\t// const items = useObservableState(items$, []);\n\n\tuseWhyDidYouUpdate('CartTable', { columns, items, query, onSort, ui });\n\n\treturn (\n\t\t<Table\n\t\t\tcolumns={columns}\n\t\t\tdata={items}\n\t\t\tsort={onSort}\n\t\t\tsortBy={query.sortBy}\n\t\t\tsortDirection={query.sortDirection}\n\t\t>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row columns={columns}>\n\t\t\t\t\t{({ getHeaderCellProps }: { getHeaderCellProps: GetHeaderCellPropsFunction }) => {\n\t\t\t\t\t\tconst { column } = getHeaderCellProps();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell {...getHeaderCellProps()}>\n\t\t\t\t\t\t\t\t{column.key === 'actions' ? (\n\t\t\t\t\t\t\t\t\t<TableSettings columns={columns} ui={ui} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\tt(`cart.column.label.${column.key}`)\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n\t\t\t\t{({ item }: { item: any }): React.ReactElement | null => {\n\t\t\t\t\tswitch (item.collection.name) {\n\t\t\t\t\t\tcase 'line_items':\n\t\t\t\t\t\t\treturn <LineItem item={item} columns={columns} />;\n\t\t\t\t\t\tcase 'fee_lines':\n\t\t\t\t\t\t\treturn <FeeLine fee={item} columns={columns} />;\n\t\t\t\t\t\tcase 'shipping_lines':\n\t\t\t\t\t\t\treturn <ShippingLine shipping={item} columns={columns} />;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default CartTable;\n","import styled from 'styled-components/native';\n\nexport const ScrollView = styled.ScrollView`\n\tmax-height: 200px;\n`;\n","import * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { useUncontrolledState } from '@wcpos/common/src/hooks/use-uncontrolled-state';\nimport Popover from '../popover';\nimport TextInput from '../textinput';\nimport * as Styled from './styles';\n\nexport interface ComboboxChoice {\n\t/**\n\t * Label for the Option.\n\t */\n\tkey: string;\n\t/**\n\t * Label for the Option.\n\t */\n\tlabel: string;\n\t/**\n\t * Value for the option.\n\t */\n\tvalue: any;\n\t/**\n\t * Disable this option.\n\t */\n\tdisabled?: boolean;\n}\n\nexport interface ComboboxProps {\n\t/**\n\t * Label to display above the input.\n\t */\n\tlabel: string;\n\t/**\n\t * Choices available in the Select.\n\t */\n\tchoices: ComboboxChoice[];\n\t/**\n\t * Currently selected value. If null, no value is selected.\n\t */\n\tselected?: string | null;\n\t/**\n\t * Callback called when selection is changed.\n\t */\n\tonChange?: (selected: any) => void;\n\t/**\n\t * Callback called when selection is changed.\n\t */\n\tonSearch?: (value: string) => void;\n\t/**\n\t * Search term\n\t */\n\tsearchValue?: string;\n\t/**\n\t * Text to display as a placeholder.\n\t */\n\tplaceholder?: string;\n\t/**\n\t * Set this to `true` to hide the label on top of the input. `label` property is still mandatory for accessibility purposes, even if not shown.\n\t */\n\thideLabel?: boolean;\n}\n\n/**\n * Let the user search and choose one option from multiple ones.\n */\nexport const Combobox = ({\n\tlabel,\n\tchoices,\n\tselected: selectedRaw = null,\n\tonChange: onChangeRaw,\n\tplaceholder,\n\tsearchValue,\n\tonSearch,\n\thideLabel,\n}: ComboboxProps) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst showPopover = React.useCallback(() => setOpen(true), []);\n\tconst [selected, onChange] = useUncontrolledState(\n\t\tselectedRaw,\n\t\tonChangeRaw as ((value: string | null) => string) | undefined // This will never be called with a null parameter\n\t);\n\n\tconst choiceComponents = React.useMemo(\n\t\t() =>\n\t\t\tchoices.map((choice) => (\n\t\t\t\t<Popover.Item\n\t\t\t\t\tkey={choice.key}\n\t\t\t\t\tlabel={choice.label}\n\t\t\t\t\tdisabled={choice.disabled}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-no-bind\n\t\t\t\t\tonSelect={() => onChange(choice.value)}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[choices, onChange]\n\t);\n\n\treturn (\n\t\t<Popover\n\t\t\topen={open}\n\t\t\tactivator={\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel={label}\n\t\t\t\t\thideLabel={hideLabel}\n\t\t\t\t\tonFocus={showPopover}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tonChange={onSearch}\n\t\t\t\t\tvalue={searchValue}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonRequestClose={() => {\n\t\t\t\tsetOpen(false);\n\t\t\t}}\n\t\t\thideBackdrop\n\t\t\tmatchWidth\n\t\t>\n\t\t\t<Styled.ScrollView>{choiceComponents}</Styled.ScrollView>\n\t\t</Popover>\n\t);\n};\n","import * as React from 'react';\nimport { useObservable, useObservableState } from 'observable-hooks';\nimport {\n\tswitchMap,\n\ttap,\n\tdebounceTime,\n\tcatchError,\n\tdistinctUntilChanged,\n\tmap,\n} from 'rxjs/operators';\nimport orderBy from 'lodash/orderBy';\nimport { useTranslation } from 'react-i18next';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport Combobox from '@wcpos/common/src/components/combobox';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\n\ntype CustomerDocument = import('@wcpos/common/src/database').CustomerDocument;\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\n\ninterface CustomerSelectProps {\n\torder?: OrderDocument;\n}\n\nconst CustomerSelect = ({ order }: CustomerSelectProps) => {\n\tconst [selectedCustomer, setSelectedCustomer] = React.useState<CustomerDocument>();\n\tconst { storeDB } = useAppState() as { storeDB: StoreDatabase };\n\tconst { t } = useTranslation();\n\tconst { data$, query, setQuery } = useDataObservable('customers', {\n\t\tsearch: '',\n\t\tsortBy: 'lastName',\n\t\tsortDirection: 'asc',\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tconst handleSelectCustomer = React.useCallback(\n\t\t(value: CustomerDocument) => {\n\t\t\tif (order) {\n\t\t\t\torder.addCustomer(value);\n\t\t\t}\n\t\t\tsetSelectedCustomer(value);\n\t\t},\n\t\t[order]\n\t);\n\n\tconst customers = useObservableState(data$, []) as CustomerDocument[];\n\n\tconst choices = React.useMemo(() => {\n\t\tconst sortedCustomers = orderBy(customers, 'lastName');\n\n\t\treturn sortedCustomers.map((customer) => ({\n\t\t\tlabel: `${customer.firstName} ${customer.lastName}`,\n\t\t\tvalue: customer,\n\t\t\tkey: customer._id,\n\t\t}));\n\t}, [customers]);\n\n\tuseWhyDidYouUpdate('Customer Select', {\n\t\tcustomers,\n\t\thandleSelectCustomer,\n\t\tonSearch,\n\t\torder,\n\t\tquery,\n\t\tsetQuery,\n\t\tdata$,\n\t});\n\n\treturn (\n\t\t<Combobox\n\t\t\tlabel=\"Search customers\"\n\t\t\thideLabel\n\t\t\tchoices={choices}\n\t\t\tplaceholder={\n\t\t\t\tselectedCustomer\n\t\t\t\t\t? // @ts-ignore\n\t\t\t\t\t  `${selectedCustomer.firstName} ${selectedCustomer.lastName}`\n\t\t\t\t\t: t('customers.search.placeholder')\n\t\t\t}\n\t\t\tonSearch={onSearch}\n\t\t\tsearchValue={query.search}\n\t\t\tonChange={handleSelectCustomer}\n\t\t/>\n\t);\n};\n\nexport default CustomerSelect;\n","import * as React from 'react';\nimport { useObservableSuspense, useObservableState, useObservable } from 'observable-hooks';\nimport { View } from 'react-native';\nimport Text from '@wcpos/common/src/components/text';\n\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\n\ninterface Props {\n\torder: OrderDocument;\n}\n\nconst Totals = ({ order }: Props) => {\n\tconst total = useObservableState(order.total$, order.total);\n\tconst totalTax = useObservableState(order.totalTax$, order.totalTax);\n\n\treturn (\n\t\t<>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t\t<Text>Total Tax:</Text>\n\t\t\t\t</View>\n\t\t\t\t<View>\n\t\t\t\t\t<Text>{totalTax}</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t\t<Text>Order Total:</Text>\n\t\t\t\t</View>\n\t\t\t\t<View>\n\t\t\t\t\t<Text>{total}</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t</>\n\t);\n};\n\nexport default Totals;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Button from '@wcpos/common/src/components/button';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\nimport MetaData from '@wcpos/common/src/components/meta-data';\nimport useAuthLogin from '@wcpos/common/src/hooks/use-auth-login';\nimport { POSContext } from '../pos';\n\nexport interface ButtonsProps {\n\torder: import('@wcpos/common/src/database').OrderDocument;\n}\n\nconst Buttons = ({ order }: ButtonsProps) => {\n\tconst { setCurrentOrder } = React.useContext(POSContext);\n\tconst [visible, setVisible] = React.useState(false);\n\tconst showAuthLogin = useAuthLogin();\n\n\treturn (\n\t\t<>\n\t\t\t<Button.Group>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Add Fee\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\torder.addFeeLine({ name: 'Fee', total: '10' });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Add Shipping\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\torder.addShippingLine({\n\t\t\t\t\t\t\tmethodTitle: 'Shipping',\n\t\t\t\t\t\t\tmethodId: 'test',\n\t\t\t\t\t\t\ttotal: '5',\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Add Note\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\torder.atomicPatch({ customerNote: 'This is a note!' });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Options\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tsetVisible(true);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Save\"\n\t\t\t\t\tonPress={async () => {\n\t\t\t\t\t\tconst replicationState = order.syncRestApi({\n\t\t\t\t\t\t\tpush: {},\n\t\t\t\t\t\t});\n\t\t\t\t\t\treplicationState.error$.subscribe((err: any) => {\n\t\t\t\t\t\t\tif (err.code === 401) {\n\t\t\t\t\t\t\t\tshowAuthLogin();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treplicationState.run(false);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Void\"\n\t\t\t\t\ttype=\"critical\"\n\t\t\t\t\tonPress={async () => {\n\t\t\t\t\t\torder.remove();\n\t\t\t\t\t\tsetCurrentOrder(undefined);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Button.Group>\n\t\t\t{visible && (\n\t\t\t\t<Dialog\n\t\t\t\t\ttitle=\"Order Data\"\n\t\t\t\t\topen\n\t\t\t\t\tonClose={() => setVisible(false)}\n\t\t\t\t\tprimaryAction={{ label: 'Save', action: () => setVisible(false) }}\n\t\t\t\t>\n\t\t\t\t\t<Dialog.Section>\n\t\t\t\t\t\t<TextInput label=\"Order Number\" value={order.number} />\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tlabel=\"Price Includes Tax\"\n\t\t\t\t\t\t\tchecked={order.pricesIncludeTax}\n\t\t\t\t\t\t\tonChange={(value) => order.atomicPatch({ pricesIncludeTax: value })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MetaData\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tdata={order.metaData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextInput label=\"Currency Symbol\" value={order.currencySymbol} />\n\t\t\t\t\t</Dialog.Section>\n\t\t\t\t</Dialog>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Buttons;\n","import * as React from 'react';\nimport { useObservableState, useObservable } from 'observable-hooks';\nimport { Observable } from 'rxjs';\nimport { switchMap, filter } from 'rxjs/operators';\nimport { isRxDocument } from 'rxdb/plugins/core';\nimport sumBy from 'lodash/sumBy';\nimport get from 'lodash/get';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Button from '@wcpos/common/src/components/button';\nimport Text from '@wcpos/common/src/components/text';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport ErrorBoundary from '@wcpos/common/src/components/error-boundary';\nimport Table from './table';\nimport CustomerSelect from '../../common/customer-select';\nimport Actions from './actions';\nimport Totals from './totals';\nimport Buttons from './buttons';\nimport { POSContext } from '../pos';\n\ntype Sort = import('@wcpos/common/src/components/table/types').Sort;\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\n\ninterface ICartProps {\n\tui: any;\n\torders: OrderDocument[];\n}\n\nconst Cart = ({ ui, orders = [] }: ICartProps) => {\n\tuseWhyDidYouUpdate('Cart', { ui, orders });\n\tconst { currentOrder, setCurrentOrder } = React.useContext(POSContext);\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\tconst [query, setQuery] = React.useState({\n\t\tsortBy: 'id',\n\t\tsortDirection: 'asc',\n\t});\n\n\tconst handleSort = React.useCallback<Sort>(\n\t\t({ sortBy, sortDirection }) => {\n\t\t\t// @ts-ignore\n\t\t\tsetQuery({ ...query, sortBy, sortDirection });\n\t\t},\n\t\t[query]\n\t);\n\n\tconst items$ = useObservable(\n\t\t(inputs$) =>\n\t\t\tinputs$.pipe(\n\t\t\t\tfilter(([o, q]) => isRxDocument(o)),\n\t\t\t\t// @ts-ignore\n\t\t\t\t// switchMap(([o, q]) => o.getCart$(q))\n\t\t\t\tswitchMap(([o, q]) => o.cart$)\n\t\t\t),\n\t\t[currentOrder, query]\n\t) as Observable<any[]>;\n\n\tconst items = useObservableState(items$, []);\n\n\tif (!currentOrder) {\n\t\treturn (\n\t\t\t<Segment.Group>\n\t\t\t\t<Segment>\n\t\t\t\t\t<CustomerSelect />\n\t\t\t\t</Segment>\n\t\t\t\t<Segment>\n\t\t\t\t\t{orders.map((order) => (\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tkey={order._id}\n\t\t\t\t\t\t\tonPress={() => setCurrentOrder(order)}\n\t\t\t\t\t\t>{`${order.id}: ${order.total}`}</Text>\n\t\t\t\t\t))}\n\t\t\t\t\t<Text onPress={() => setCurrentOrder(undefined)}>New</Text>\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Segment.Group>\n\t\t\t<Segment>\n\t\t\t\t<CustomerSelect order={currentOrder} />\n\t\t\t</Segment>\n\t\t\t<Segment grow>\n\t\t\t\t<Table items={items} columns={columns} query={query} onSort={handleSort} ui={ui} />\n\t\t\t</Segment>\n\t\t\t<Segment>\n\t\t\t\t<Totals order={currentOrder} />\n\t\t\t</Segment>\n\t\t\t<Segment>\n\t\t\t\t<Buttons order={currentOrder} />\n\t\t\t</Segment>\n\t\t\t<Segment>\n\t\t\t\t{orders.map((order) => (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tkey={order._id}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tsetCurrentOrder(order);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>{`${order.id}: ${order.total}`}</Text>\n\t\t\t\t))}\n\t\t\t\t<Text\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tsetCurrentOrder(undefined);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tNew\n\t\t\t\t</Text>\n\t\t\t</Segment>\n\t\t</Segment.Group>\n\t);\n};\n\nexport default Cart;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '@wcpos/common/src/components/text';\nimport Button from '@wcpos/common/src/components/button';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\n// import WcApiService from '@wcpos/common/src/services/wc-api';\n\ninterface Props {\n\tproduct: any;\n\t// addToCart: any;\n}\n\nconst Variations = ({ product }: Props) => {\n\tconst { user, storeDB } = useAppState();\n\tconst [variations, setVariations] = React.useState([]);\n\n\tconst addToCart = async (variation: any) => {\n\t\tconst order = await product.collections().orders.findOne().exec();\n\t\torder.addOrUpdateLineItem(variation, product);\n\t};\n\n\t// React.useEffect(() => {\n\t// \t(async () => {\n\t// \t\tconst vars = await storeDB.collections.variations.findByIds(product.variations.map(String));\n\t// \t\tsetVariations(Array.from(vars.values()));\n\t// \t})();\n\t// }, [product, storeDB.collections.variations]);\n\n\tconst fetchData = async (endpoint: string) => {\n\t\t// const path = storePath.split('.');\n\t\t// const site = user.get(path.slice(1, 3).join('.'));\n\t\t// const wpCredentials = user.get(path.slice(1, 5).join('.'));\n\t\t// const api = new WcApiService({\n\t\t// \tbaseUrl: site.wc_api_url,\n\t\t// \tcollection: endpoint,\n\t\t// \tkey: wpCredentials.consumer_key,\n\t\t// \tsecret: wpCredentials.consumer_secret,\n\t\t// });\n\t\t// const result = await api.fetch();\n\t\t// console.log(result);\n\t\t// storeDB.collections.variations.bulkInsert(result);\n\t};\n\n\tif (variations.length === 0) {\n\t\treturn (\n\t\t\t<Button\n\t\t\t\ttitle=\"Fetch variations\"\n\t\t\t\tonPress={() => {\n\t\t\t\t\tfetchData(`products/${product.id}/variations`);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{variations.map((variation: any) => (\n\t\t\t\t<View key={variation.id}>\n\t\t\t\t\t<Text>\n\t\t\t\t\t\t{variation.id} -\n\t\t\t\t\t\t{variation.attributes.map((attribute: any) => (\n\t\t\t\t\t\t\t<Text key={attribute.id}>\n\t\t\t\t\t\t\t\t{attribute.name} -{attribute.option},\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t- {variation.price}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Button title=\"Add to Cart\" onPress={() => addToCart(variation)} />\n\t\t\t\t</View>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default Variations;\n","import * as React from 'react';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Button from '@wcpos/common/src/components/button';\nimport Popover from '@wcpos/common/src/components/popover';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Variations from './variations';\nimport { POSContext } from '../../pos';\n\ninterface Props {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n}\n\nconst Actions = ({ item: product }: Props) => {\n\tconst { currentOrder, setCurrentOrder } = React.useContext(POSContext);\n\tconst { storeDB } = useAppState();\n\tconst [visible, setVisible] = React.useState(false);\n\n\tconst addToCart = async () => {\n\t\tif (currentOrder) {\n\t\t\treturn currentOrder.addOrUpdateLineItem(product);\n\t\t}\n\t\t// @ts-ignore\n\t\tconst newOrder = await storeDB?.collections.orders.createNewOrderWithProduct(product);\n\t\tsetCurrentOrder(newOrder);\n\t\treturn newOrder;\n\t};\n\n\tif (!product.isSynced()) {\n\t\treturn <Icon.Skeleton size=\"x-large\" />;\n\t}\n\n\tif (product.isVariable()) {\n\t\treturn (\n\t\t\t<Popover\n\t\t\t\topen={visible}\n\t\t\t\tonRequestClose={() => setVisible(false)}\n\t\t\t\tactivator={<Button title=\"->\" onPress={() => setVisible(true)} />}\n\t\t\t>\n\t\t\t\t<Variations product={product} />\n\t\t\t</Popover>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Icon\n\t\t\tname=\"addCircle\"\n\t\t\tsize=\"x-large\"\n\t\t\tbackgroundStyle=\"none\"\n\t\t\tonPress={() => {\n\t\t\t\taddToCart();\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport Img from '@wcpos/common/src/components/image';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Image = ({ item: product }: Props) => {\n\tconst { thumbnail } = product;\n\n\treturn (\n\t\t<Img\n\t\t\tsrc={thumbnail}\n\t\t\t// placeholder={<Img source={require('@wcpos/common/src/assets/placeholder.png')} />}\n\t\t/>\n\t);\n};\n\nexport default Image;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport find from 'lodash/find';\nimport Text from '@wcpos/common/src/components/text';\nimport Categories from '../../../common/product-categories';\nimport Tags from '../../../common/product-tags';\n\ninterface Props {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n\tcolumn: any;\n\tsetQuery?: any;\n}\n\nconst Name = ({ item: product, column, setQuery }: Props) => {\n\tconst { display } = column;\n\n\t/**\n\t *\n\t */\n\tconst show = React.useCallback(\n\t\t(key: string): boolean => {\n\t\t\tconst d = find(display, { key });\n\t\t\treturn !(d && d.hide);\n\t\t},\n\t\t[display]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Text>{product.name}</Text>\n\t\t\t{show('sku') && <Text size=\"small\">{product.sku}</Text>}\n\t\t\t{show('categories') && <Categories item={product} setQuery={setQuery} />}\n\t\t\t{show('tags') && <Tags item={product} setQuery={setQuery} />}\n\t\t\t{product.type === 'variable' && (\n\t\t\t\t<View>\n\t\t\t\t\t{(product.attributes as [])\n\t\t\t\t\t\t.filter((attr: any) => attr.variation)\n\t\t\t\t\t\t.map((attr: any) => (\n\t\t\t\t\t\t\t<Text key={attr.id} size=\"small\">\n\t\t\t\t\t\t\t\t<Text size=\"small\" type=\"secondary\">\n\t\t\t\t\t\t\t\t\t{attr.name}:\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t{attr.options.join(', ')}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t))}\n\t\t\t\t</View>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Name;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype PriceProps = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Price = ({ item: product }: PriceProps) => {\n\treturn product.isSynced() ? <Text>{product.price}</Text> : <Text.Skeleton length=\"short\" />;\n};\n\nexport default Price;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst RegularPrice = ({ item: product }: Props) => {\n\treturn <Text>{product.regular_price}</Text>;\n};\n\nexport default RegularPrice;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype SKUProps = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst SKU = ({ item: product }: SKUProps) => {\n\treturn product.isSynced() ? <Text>{product.sku}</Text> : <Text.Skeleton length=\"short\" />;\n};\n\nexport default SKU;\n","import actions from './actions';\nimport categories from '../../../common/product-categories';\nimport image from './image';\nimport name from './name';\nimport price from './price';\nimport regularPrice from './regular-price';\nimport sku from './sku';\nimport tag from '../../../common/product-tags';\n\nexport default {\n\tactions,\n\tcategories,\n\timage,\n\tname,\n\tprice,\n\tregularPrice,\n\tsku,\n\ttag,\n};\n","import * as React from 'react';\nimport { useObservable, useObservableState, useObservableSuspense } from 'observable-hooks';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { useTranslation } from 'react-i18next';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Search from '@wcpos/common/src/components/search';\nimport Text from '@wcpos/common/src/components/text';\nimport Table from '../../common/table';\nimport Footer from './footer';\nimport UiSettings from '../../common/ui-settings';\nimport cells from './cells';\n\ninterface POSProductsProps {\n\tui: any;\n\tstoreDB: any;\n}\n\n/**\n *\n */\nconst Products = ({ ui, storeDB }: POSProductsProps) => {\n\t// const { t } = useTranslation();\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\t// @ts-ignore\n\tconst totalRecords = useObservableState(storeDB?.collections.products.totalRecords$);\n\tconst [isSyncing, setIsSyncing] = React.useState<boolean>(false);\n\tconst [recordsShowing, setRecordsShowing] = React.useState<number>(0);\n\tconst { data$, query, setQuery } = useDataObservable('products', {\n\t\tsearch: '',\n\t\tsortBy: 'name',\n\t\tsortDirection: 'asc',\n\t\tfilters: {\n\t\t\tcategory: null,\n\t\t\ttag: null,\n\t\t},\n\t});\n\n\t/**\n\t *\n\t */\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\t/**\n\t *\n\t */\n\tconst filters = React.useMemo(() => {\n\t\tconst f = [];\n\t\tif (get(query, 'filters.category')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.category.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.category', null));\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tif (get(query, 'filters.tag')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.tag.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.tag', null));\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn f;\n\t}, [query, setQuery]);\n\n\treturn (\n\t\t<Segment.Group>\n\t\t\t<Segment>\n\t\t\t\t<Search\n\t\t\t\t\tlabel=\"Search Products\"\n\t\t\t\t\tplaceholder=\"Search Products\"\n\t\t\t\t\tvalue={query.search}\n\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\tactions={[<UiSettings ui={ui} />]}\n\t\t\t\t\tfilters={filters}\n\t\t\t\t/>\n\t\t\t</Segment>\n\t\t\t<Segment grow>\n\t\t\t\t<Table\n\t\t\t\t\tcollection={storeDB.collections.products}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdata$={data$}\n\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\tcells={cells}\n\t\t\t\t/>\n\t\t\t</Segment>\n\t\t\t<Segment style={{ alignItems: 'flex-end' }}>\n\t\t\t\t<>\n\t\t\t\t\t<Text>\n\t\t\t\t\t\tShowing {recordsShowing} of {totalRecords}\n\t\t\t\t\t</Text>\n\t\t\t\t</>\n\t\t\t</Segment>\n\t\t</Segment.Group>\n\t);\n};\n\nexport default Products;\n","import styled, { css } from 'styled-components/native';\nimport Platform from '@wcpos/common/src/lib/platform';\n\nexport const View = styled.View<{ hovered: boolean }>`\n\theight: 100%;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: ${({ hovered }) => (hovered ? '#f5f5f5' : 'transparent')};\n\twidth: 10px;\n\n\t${\n\t\tPlatform.OS !== 'ios' &&\n\t\tPlatform.OS !== 'android' &&\n\t\tcss`\n\t\t\tcursor: col-resize;\n\t\t`\n\t}}\n`;\n","import * as React from 'react';\nimport { Pressable } from 'react-native';\nimport * as Styled from './styles';\nimport Icon from '../icon';\n\nexport interface GutterProps {\n\tchildren?: React.ReactNode;\n\tstyle?: any;\n}\n\nexport const Gutter = ({ children, style }: GutterProps) => {\n\treturn (\n\t\t<Pressable style={[{ flexDirection: 'row', height: '100%' }, style]}>\n\t\t\t{({\n\t\t\t\t// @ts-ignore\n\t\t\t\thovered,\n\t\t\t}) => <Styled.View hovered={hovered}>{children || <Icon name=\"more-vert\" />}</Styled.View>}\n\t\t</Pressable>\n\t);\n};\n","import * as React from 'react';\nimport Img from '@wcpos/common/src/components/image';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Image = ({ item: product }: Props) => {\n\treturn <Img src={product.thumbnail} style={{ width: 100, height: 100 }} />;\n};\n\nexport default Image;\n","import * as React from 'react';\nimport TextInput from '@wcpos/common/src/components/textinput';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Name = ({ item: product }: Props) => {\n\tconst handleChangeText = async (newValue: string) => {\n\t\tawait product.atomicPatch({ name: newValue });\n\t};\n\n\treturn <TextInput label=\"Name\" value={product.name} onChange={handleChangeText} hideLabel />;\n};\n\nexport default Name;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '../text';\n\ntype Countries =\n\t| 'default'\n\t| 'AU'\n\t| 'AT'\n\t| 'BE'\n\t| 'CA'\n\t| 'CH'\n\t| 'CL'\n\t| 'CN'\n\t| 'CZ'\n\t| 'DE'\n\t| 'EE'\n\t| 'FI'\n\t| 'DK'\n\t| 'FR'\n\t| 'HK'\n\t| 'HU'\n\t| 'IN'\n\t| 'IS'\n\t| 'IT'\n\t| 'JP'\n\t| 'TW'\n\t| 'LI'\n\t| 'NL'\n\t| 'NZ'\n\t| 'NO'\n\t| 'PL'\n\t| 'PT'\n\t| 'SK'\n\t| 'RS'\n\t| 'SI'\n\t| 'ES'\n\t| 'SE'\n\t| 'TR'\n\t| 'UG'\n\t| 'US'\n\t| 'VN';\n\ninterface Address {\n\taddress_1?: string;\n\taddress_2?: string;\n\tcity?: string;\n\tcompany?: string;\n\tcountry?: Countries;\n\tfirst_name?: string;\n\tlast_name?: string;\n\tpostcode?: string;\n\tstate?: string;\n}\n\ntype Template = Address & {\n\tname?: string;\n\tstate_code?: string;\n\tstate_upper?: string;\n\tcity_upper?: string;\n};\n\nexport interface FormatAddressProps {\n\taddress: Address;\n\tshowName: boolean;\n}\n\nconst addresses = {\n\tdefault: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city}\\n{state}\\n{postcode}\\n{country}',\n\tAU: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city} {state} {postcode}\\n{country}',\n\tAT: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tBE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tCA: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{city} {state_code}&nbsp;&nbsp;{postcode}\\n{country}',\n\tCH: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tCL: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{state}\\n{postcode} {city}\\n{country}',\n\tCN: '{country} {postcode}\\n{state}, {city}, {address_2}, {address_1}\\n{company}\\n{name}',\n\tCZ: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tDE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tEE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tFI: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tDK: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tFR: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city_upper}\\n{country}',\n\tHK: '{company}\\n{first_name} {last_name_upper}\\n{address_1}\\n{address_2}\\n{city_upper}\\n{state_upper}\\n{country}',\n\tHU: '{name}\\n{company}\\n{city}\\n{address_1}\\n{address_2}\\n{postcode}\\n{country}',\n\tIN: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{city} {postcode}\\n{state}, {country}',\n\tIS: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tIT: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode}\\n{city}\\n{state_upper}\\n{country}',\n\tJP: '{postcode}\\n{state} {city} {address_1}\\n{address_2}\\n{company}\\n{last_name} {first_name}\\n{country}',\n\tTW: '{company}\\n{last_name} {first_name}\\n{address_1}\\n{address_2}\\n{state}, {city} {postcode}\\n{country}',\n\tLI: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tNL: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tNZ: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city} {postcode}\\n{country}',\n\tNO: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tPL: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tPT: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tSK: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tRS: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tSI: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tES: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{state}\\n{country}',\n\tSE: '{company}\\n{name}\\n{address_1}\\n{address_2}\\n{postcode} {city}\\n{country}',\n\tTR: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{postcode} {city} {state}\\n{country}',\n\tUG: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city}\\n{state}, {country}',\n\tUS: '{name}\\n{company}\\n{address_1}\\n{address_2}\\n{city}, {state_code} {postcode}\\n{country}',\n\tVN: '{name}\\n{company}\\n{address_1}\\n{city}\\n{country}',\n};\n\nexport const FormatAddress = ({ address, showName }: FormatAddressProps) => {\n\tconst addr = { ...address } as Template; // clone address\n\tlet template =\n\t\taddr.country && addresses.hasOwnProperty(addr.country)\n\t\t\t? addresses[addr.country]\n\t\t\t: addresses.default;\n\n\tObject.assign(addr, {\n\t\tname: showName && `${addr.first_name} ${addr.last_name}`,\n\t\tstate_code: addr.state,\n\t\tstate_upper: addr.state?.toUpperCase(),\n\t\tcity_upper: addr.city?.toUpperCase(),\n\t});\n\n\tconst matches = template.match(/\\{[\\w]+\\}/g);\n\tmatches &&\n\t\tmatches.forEach((match) => {\n\t\t\tconst regex = new RegExp(match, 'g');\n\t\t\tconst prop = match.split(/{|}/g)[1] as Extract<keyof Template, string>;\n\t\t\ttemplate = template.replace(regex, addr[prop] || '');\n\t\t});\n\n\treturn (\n\t\t<View>\n\t\t\t{template.split('\\n').map((line, idx) => {\n\t\t\t\tif (line.trim()) {\n\t\t\t\t\treturn <Text key={idx}>{line}</Text>;\n\t\t\t\t}\n\t\t\t})}\n\t\t</View>\n\t);\n};\n","import { FormatName, FormatNameProps } from './name';\nimport { FormatNumber, FormatNumberProps } from './number';\nimport { FormatList, FormatListProps } from './list';\nimport { FormatAddress, FormatAddressProps } from './address';\nimport FormatDate, { FormatDateProps } from './date';\nimport FormatCurrency, { FormatCurrencyProps } from './currency';\n\nexport type {\n\tFormatNameProps,\n\tFormatNumberProps,\n\tFormatListProps,\n\tFormatAddressProps,\n\tFormatDateProps,\n\tFormatCurrencyProps,\n};\nexport default {\n\tName: FormatName,\n\tNumber: FormatNumber,\n\tList: FormatList,\n\tAddress: FormatAddress,\n\tDate: FormatDate,\n\tCurrency: FormatCurrency,\n};\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatNameProps {\n\tfirstName?: string;\n\tlastName?: string;\n}\n\nexport const FormatName = ({ firstName, lastName }: FormatNameProps) => {\n\treturn (\n\t\t<Text>\n\t\t\t{firstName} {lastName}\n\t\t</Text>\n\t);\n};\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatNumberProps {\n\tchildren: React.ReactNode;\n\tprefix?: string;\n\tsuffix?: string;\n\tdecimalSeparator?: string;\n}\n\nexport const FormatNumber = ({ children, prefix, suffix }: FormatNumberProps) => {\n\treturn (\n\t\t<Text>\n\t\t\t{prefix} {children} {suffix}\n\t\t</Text>\n\t);\n};\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatListProps {\n\tarray?: [];\n}\n\nexport const FormatList = ({ array }: FormatListProps) => {\n\treturn (\n\t\t<>\n\t\t\t{array?.map((item, index) => {\n\t\t\t\tif (typeof item === 'string') {\n\t\t\t\t\treturn <Text>{item}, </Text>;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t})}\n\t\t</>\n\t);\n};\n","import * as React from 'react';\nimport { format } from 'date-fns';\nimport Text from '../text';\n\nexport interface FormatDateProps {\n\tvalue: string;\n}\n\nconst FormatDate = ({ value }: FormatDateProps) => {\n\treturn <Text>{format(new Date(value || ''), 'dd/MM/yyyy')}</Text>;\n};\n\nexport default React.memo(FormatDate);\n","import * as React from 'react';\nimport Text from '../text';\n\nexport interface FormatCurrencyProps {\n\tchildren: React.ReactNode;\n\tdecimal?: string;\n\tformat?: {\n\t\tneg: string;\n\t\tpos: string;\n\t\tzero: string;\n\t};\n\tprecision?: number;\n\tsymbol?: string;\n\tthousand?: string;\n}\n\nconst FormatCurrency = ({ children, symbol }: FormatCurrencyProps) => {\n\treturn (\n\t\t<Text>\n\t\t\t{symbol} {children}\n\t\t</Text>\n\t);\n};\n\nexport default React.memo(FormatCurrency);\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\n\ninterface Props {\n\titem: any;\n\tcolumn: any;\n}\n\nexport const FormattedPrice = ({ item, column }: Props) => {\n\t// const { userDB, storeID } = useAppState();\n\t// const [currency, setCurrency] = React.useState();\n\n\t// // get currency settings\n\t// React.useEffect(() => {\n\t// \tasync function fetchStore() {\n\t// \t\tif (storeID) {\n\t// \t\t\tconst store = await userDB?.collections.stores.findOne(storeID).exec();\n\t// \t\t\tsetCurrency(store?.accounting.currency);\n\t// \t\t}\n\t// \t}\n\t// \tfetchStore();\n\t// }, []);\n\n\treturn <Format.Currency symbol=\"$\">{item[column.key]}</Format.Currency>;\n};\n\nexport default FormattedPrice;\n","import styled, { css } from 'styled-components/native';\nimport Pressable from '../pressable';\nimport { Text } from '../text/styles';\n\nexport const Container = styled.View``;\n\nexport const Item = styled(Pressable)`\n\tpadding: 5px 10px;\n`;\n\nexport const Label = styled(Text)<{ hovered: boolean }>`\n\t${({ hovered, theme, type }) =>\n\t\thovered &&\n\t\t// @ts-ignore\n\t\t(type === 'critical') | (type === 'warning') &&\n\t\t`\n    color: ${theme.TEXT_COLOR_INVERSE};\n  `}\n`;\n","import * as React from 'react';\nimport { ViewStyle } from 'react-native';\nimport { useTheme } from 'styled-components/native';\nimport * as Styled from './styles';\n\nexport interface ItemProps {\n\t/**\n\t *\n\t */\n\tchildren?: string;\n\t/**\n\t *\n\t */\n\tlabel?: string;\n\t/**\n\t *\n\t */\n\tonPress?: (value: any) => void;\n\t/**\n\t *\n\t */\n\taction?: () => void;\n\t/**\n\t * Color of menu item\n\t */\n\ttype?: import('@wcpos/common/src/themes').ColorTypes;\n\t/**\n\t *\n\t */\n\tstyle?: ViewStyle;\n}\n\nexport const Item = ({ children, label = '', onPress, action, type, style }: ItemProps) => {\n\tconst theme = useTheme();\n\n\t/**\n\t *\n\t */\n\tconst handlePress = React.useCallback(() => {\n\t\tif (typeof action === 'function') {\n\t\t\taction();\n\t\t}\n\t\tif (typeof onPress === 'function') {\n\t\t\tonPress(label);\n\t\t}\n\t}, [action, label, onPress]);\n\n\t/**\n\t *\n\t */\n\tconst calculatedStyled = React.useCallback(\n\t\t({ hovered }) => {\n\t\t\tlet hoverBackgroundColor = theme.MENU_ITEM_HOVER_BACKGROUND_COLOR;\n\t\t\tif (type) {\n\t\t\t\tconst color = `color_${type}`.toUpperCase();\n\t\t\t\t// @ts-ignore\n\t\t\t\thoverBackgroundColor = theme[color];\n\t\t\t}\n\t\t\treturn [{ backgroundColor: hovered ? hoverBackgroundColor : 'transparent' }, style];\n\t\t},\n\t\t[style, theme, type]\n\t);\n\n\treturn (\n\t\t<Styled.Item onPress={handlePress} style={calculatedStyled}>\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\t({ hovered }) => (\n\t\t\t\t\t<Styled.Label type={type} hovered={hovered}>\n\t\t\t\t\t\t{children || label}\n\t\t\t\t\t</Styled.Label>\n\t\t\t\t)\n\t\t\t}\n\t\t</Styled.Item>\n\t);\n};\n","import * as React from 'react';\nimport snakeCase from 'lodash/snakeCase';\nimport { Item, ItemProps } from './item';\nimport * as Styled from './styles';\n\n/**\n * Action with a Label.\n */\nexport interface TextAction {\n\t/**\n\t * Label to display.\n\t */\n\tlabel: string;\n\t/**\n\t * Action to execute on click.\n\t */\n\taction?: () => void;\n\t/**\n\t * Color of menu item\n\t */\n\ttype?: import('@wcpos/common/src/themes').ColorTypes;\n}\n\n// export interface IconAction {\n// \t/**\n// \t * Icon to display.\n// \t */\n// \ticon: IconName;\n// \t/**\n// \t * Color of the icon.\n// \t */\n// \tcolor?: IconProps['color'];\n// \t/**\n// \t * Action to execute on click.\n// \t */\n// \taction?: () => void;\n// }\n\n// export type TextWithIconAction = TextAction & IconAction;\n// export type TextWithOptionalIconAction = TextAction & Partial<IconAction>;\n\nexport interface MenuProps {\n\t/**\n\t *\n\t */\n\titems: (TextAction | string)[];\n\t/**\n\t *\n\t */\n\tonSelect?: (value: any) => void;\n}\n\nexport const Menu: React.FC<MenuProps> & { Item: typeof Item } = ({\n\titems,\n\t// @ts-ignore\n\tonSelect = () => {},\n}) => {\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{items.map((rawItem, index) => {\n\t\t\t\tconst item = typeof rawItem === 'string' ? { label: rawItem } : rawItem;\n\t\t\t\treturn (\n\t\t\t\t\t<Item\n\t\t\t\t\t\tkey={snakeCase(`${item.label}_${index}`)}\n\t\t\t\t\t\t{...item}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tonSelect(item);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Styled.Container>\n\t);\n};\n\nexport type MenuItemProps = ItemProps;\nMenu.Item = Item;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\twidth: 8px;\n\theight: 8px;\n`;\n\nexport const Left = styled.View`\n\tborder-top-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-right-width: 4px;\n\tborder-right-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-top-color: transparent;\n\tborder-bottom-color: transparent;\n`;\n\nexport const Right = styled.View`\n\tborder-top-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-left-width: 4px;\n\tborder-left-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-top-color: transparent;\n\tborder-bottom-color: transparent;\n`;\n\nexport const Up = styled.View`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-bottom-width: 4px;\n\tborder-bottom-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n\nexport const Down = styled.View`\n\tborder-left-width: 4px;\n\tborder-right-width: 4px;\n\tborder-top-width: 4px;\n\tborder-top-color: ${({ theme }) => theme.COLOR_PRIMARY};\n\tborder-left-color: transparent;\n\tborder-right-color: transparent;\n`;\n","import * as React from 'react';\nimport * as Styled from './styles';\n\nexport interface ArrowProps {\n\tdirection?: 'left' | 'right' | 'up' | 'down';\n\tsize?: 'small' | 'large' | 'default';\n}\n\nexport const Arrow = ({ direction = 'down', size = 'default' }: ArrowProps) => {\n\tconst renderArrow = () => {\n\t\tswitch (direction) {\n\t\t\tcase 'left':\n\t\t\t\treturn <Styled.Left />;\n\t\t\tcase 'right':\n\t\t\t\treturn <Styled.Right />;\n\t\t\tcase 'up':\n\t\t\t\treturn <Styled.Up />;\n\t\t\tdefault:\n\t\t\t\treturn <Styled.Down />;\n\t\t}\n\t};\n\n\treturn <Styled.Container>{renderArrow()}</Styled.Container>;\n};\n","import * as React from 'react';\nimport get from 'lodash/get';\nimport Popover from '../popover';\nimport Menu from '../menu';\nimport Text from '../text';\nimport Pressable from '../pressable';\nimport Arrow from '../arrow';\nimport * as Styled from './styles';\n\ntype TextAction = import('../menu/menu').TextAction;\n\n/**\n *\n */\nexport interface DropdownProps {\n\t/**\n\t *\n\t */\n\titems: string[] | TextAction[];\n\t/**\n\t *\n\t */\n\tonSelect?: (value: any) => void;\n\t/**\n\t *\n\t */\n\tactivator: React.ReactElement | string;\n}\n\n/**\n *\n */\nexport const Dropdown = ({ items, onSelect, activator }: DropdownProps) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst show = React.useCallback(() => setOpen(true), []);\n\tconst hide = React.useCallback(() => setOpen(false), []);\n\n\tconst _activator = React.useMemo(() => {\n\t\t// wrap string\n\t\tif (typeof activator === 'string') {\n\t\t\treturn (\n\t\t\t\t<Text onPress={show} style={{ alignItems: 'center' }}>\n\t\t\t\t\t{activator}\n\t\t\t\t\t<Arrow direction={open ? 'up' : 'down'} />\n\t\t\t\t</Text>\n\t\t\t);\n\t\t}\n\t\t// special case for icon\n\t\tif (React.isValidElement(activator) && get(activator, 'type.name') === 'Icon') {\n\t\t\t// @ts-ignore\n\t\t\treturn React.cloneElement(activator, { onPress: show });\n\t\t}\n\t\t// else wrap in Pressable\n\t\treturn (\n\t\t\t<Pressable onPress={show} style={{ alignItems: 'center' }}>\n\t\t\t\t{activator}\n\t\t\t\t<Arrow direction={open ? 'up' : 'down'} />\n\t\t\t</Pressable>\n\t\t);\n\t}, [activator, open, show]);\n\n\treturn (\n\t\t<Popover\n\t\t\tactivator={_activator}\n\t\t\tonRequestClose={hide}\n\t\t\topen={open}\n\t\t\thideBackdrop\n\t\t\tplacement=\"bottom-end\"\n\t\t\tpopoverStyle={{ paddingLeft: 0, paddingRight: 0 }}\n\t\t>\n\t\t\t<Menu items={items} onSelect={onSelect} />\n\t\t</Popover>\n\t);\n};\n","import styled from 'styled-components/native';\nimport { Text } from '../text/styles';\nimport Pressable from '../pressable';\n\nexport const Container = styled.View``;\n\nexport const TabsContainer = styled.View`\n\tflex-direction: row;\n`;\n\nexport const Tab = styled(Pressable)<{ selected: boolean }>`\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 5px;\n`;\n\nexport const Label = styled(Text)<{ selected: boolean }>`\n\tcolor: ${({ selected, theme }) => (selected ? theme.TEXT_COLOR : theme.TEXT_COLOR_SECONDARY)};\n`;\n","import React from 'react';\nimport * as Styled from './styles';\n\nexport interface TabProps {\n\tlabel: string;\n\tselected: boolean;\n\tonSelect: () => void;\n}\n\nexport const Tab = ({ label, selected, onSelect }: TabProps) => {\n\treturn (\n\t\t<Styled.Tab selected={selected} onPress={onSelect}>\n\t\t\t<Styled.Label selected={selected}>{label}</Styled.Label>\n\t\t</Styled.Tab>\n\t);\n};\n","import React, { useMemo } from 'react';\nimport { Tab } from './tab';\nimport * as Styled from './styles';\n\nexport interface TabsProps {\n\t/**\n\t * List of tabs.\n\t */\n\ttabs: string[];\n\t/**\n\t * Index of selected tab.\n\t */\n\tselected: number;\n\t/**\n\t * Callback when tab is selected.\n\t */\n\tonSelect: (selectedTabIndex: number) => void;\n\t/**\n\t * Content to display in tabs.\n\t */\n\tchildren: React.ReactNode;\n}\n\n/**\n * Use to alternate among related views sharing the same context.\n */\nexport const Tabs: React.FC<TabsProps> = ({ tabs, selected, onSelect, children }) => {\n\tconst tabItems = useMemo(\n\t\t() =>\n\t\t\ttabs.map((tab, index) => (\n\t\t\t\t<Tab\n\t\t\t\t\tkey={tab}\n\t\t\t\t\tlabel={tab}\n\t\t\t\t\tselected={selected === index}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-no-bind\n\t\t\t\t\tonSelect={() => onSelect(index)}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[tabs, selected, onSelect]\n\t);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Styled.TabsContainer>{tabItems}</Styled.TabsContainer>\n\t\t\t{children}\n\t\t</Styled.Container>\n\t);\n};\n","import styled from 'styled-components/native';\nimport { Text } from '../text/styles';\nimport Pressable from '../pressable';\nimport Button from '../button';\n\nexport const Raw = styled.TextInput`\n\tmax-height: 300px;\n`;\n\nexport const Container = styled.View`\n\tposition: relative;\n\twidth: 100%;\n`;\n\nexport const RawButtonContainer = styled.View`\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n`;\n","import * as React from 'react';\nimport * as Styled from './styles';\n\nexport interface RawTreeProps {\n\tdata: any;\n}\n\nexport const Raw = ({ data }: RawTreeProps) => {\n\tconst raw = JSON.stringify(data, null, '  ');\n\n\treturn (\n\t\t<Styled.Raw multiline numberOfLines={raw.split('\\n').length} editable={false} value={raw} />\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const ObjectNode = styled.View`\n\tpadding-left: 20px;\n`;\n","import * as React from 'react';\nimport Text from '../../text';\nimport * as Styled from './styles';\n\nexport interface JsonValueProps {\n\tname: string;\n\tvalue: any;\n\toriginalValue: any;\n\tkeyPath?: string[];\n\tdeep?: number;\n\tisCollapsed: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand: (keyPath: string[], deep: number, data: any) => void;\n}\n\nexport const JsonValue = ({ name, value, keyPath = [], deep = 0 }: JsonValueProps) => {\n\treturn (\n\t\t<Styled.ObjectNode style={{ flexDirection: 'row' }}>\n\t\t\t<Text type=\"info\">{name} : </Text>\n\t\t\t<Text>{String(value)}</Text>\n\t\t</Styled.ObjectNode>\n\t);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '../../text';\nimport Arrow from '../../arrow';\nimport Pressable from '../../pressable';\nimport { JsonNode } from './node';\nimport * as Styled from './styles';\n\nexport interface JsonObjectProps {\n\tdata: any;\n\tname: string;\n\tisCollapsed: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand: (keyPath: string[], deep: number, data: any) => void;\n\tkeyPath?: string[];\n\tdeep?: number;\n}\n\nexport const JsonObject = ({\n\tdata,\n\tname,\n\tisCollapsed,\n\tonExpand,\n\tkeyPath = [],\n\tdeep = 0,\n}: JsonObjectProps) => {\n\tconst _keyPath = deep === -1 ? [] : [...keyPath, name];\n\tconst nextDeep = deep + 1;\n\tconst [collapsed, setCollapsed] = React.useState(isCollapsed(_keyPath, deep, data));\n\n\tconst handleCollapse = () => {\n\t\tif (collapsed) {\n\t\t\tonExpand(_keyPath, deep, data);\n\t\t}\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\tconst renderCollapsed = () => {\n\t\tconst keyList = Object.getOwnPropertyNames(data);\n\t\tconst collapseValue = ' {...}';\n\t\tconst numberOfItems = keyList.length;\n\t\tconst itemName = numberOfItems === 0 || numberOfItems > 1 ? 'keys' : 'key';\n\n\t\treturn (\n\t\t\t<Text type=\"secondary\">\n\t\t\t\t{collapseValue} {numberOfItems} {itemName}\n\t\t\t</Text>\n\t\t);\n\t};\n\n\tconst renderNotCollapsed = () => {\n\t\tconst keyList = Object.getOwnPropertyNames(data);\n\n\t\tconst list = keyList.map((key) => (\n\t\t\t<JsonNode\n\t\t\t\tkey={key}\n\t\t\t\tname={key}\n\t\t\t\tdata={data[key]}\n\t\t\t\tkeyPath={_keyPath}\n\t\t\t\tdeep={nextDeep}\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tonExpand={onExpand}\n\t\t\t/>\n\t\t));\n\n\t\treturn <View>{list}</View>;\n\t};\n\n\treturn (\n\t\t<Styled.ObjectNode>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<Pressable onPress={handleCollapse} style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t<Arrow direction={collapsed ? 'right' : 'down'} />\n\t\t\t\t\t<Text type=\"info\">{name} :</Text>\n\t\t\t\t</Pressable>\n\t\t\t\t{collapsed ? renderCollapsed() : <Text>{' {'}</Text>}\n\t\t\t</View>\n\t\t\t{!collapsed && renderNotCollapsed()}\n\t\t\t{!collapsed && <Text>{'}'}</Text>}\n\t\t</Styled.ObjectNode>\n\t);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Text from '../../text';\nimport Arrow from '../../arrow';\nimport Pressable from '../../pressable';\nimport { JsonNode } from './node';\nimport * as Styled from './styles';\n\nexport interface JsonArrayProps {\n\tdata: any;\n\tname: string;\n\tisCollapsed: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand: (keyPath: string[], deep: number, data: any) => void;\n\tkeyPath?: string[];\n\tdeep?: number;\n}\n\nexport const JsonArray = ({\n\tdata,\n\tname,\n\tisCollapsed,\n\tonExpand,\n\tkeyPath = [],\n\tdeep = 0,\n}: JsonArrayProps) => {\n\tconst _keyPath = deep === -1 ? [] : [...keyPath, name];\n\tconst nextDeep = deep + 1;\n\tconst [collapsed, setCollapsed] = React.useState(isCollapsed(_keyPath, deep, data));\n\n\tconst handleCollapse = () => {\n\t\tif (collapsed) {\n\t\t\tonExpand(_keyPath, deep, data);\n\t\t}\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\tconst renderCollapsed = () => {\n\t\tconst collapseValue = ' [...]';\n\t\tconst numberOfItems = data.length;\n\t\tconst itemName = numberOfItems === 0 || numberOfItems > 1 ? 'items' : 'item';\n\n\t\treturn (\n\t\t\t<Text type=\"secondary\">\n\t\t\t\t{collapseValue} {numberOfItems} {itemName}\n\t\t\t</Text>\n\t\t);\n\t};\n\n\tconst renderNotCollapsed = () => {\n\t\tconst keyList = Object.getOwnPropertyNames(data);\n\n\t\tconst list = data.map((item: any, index: number) => (\n\t\t\t<JsonNode\n\t\t\t\tkey={index}\n\t\t\t\tname={`${index}`}\n\t\t\t\tdata={item}\n\t\t\t\tkeyPath={_keyPath}\n\t\t\t\tdeep={nextDeep}\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tonExpand={onExpand}\n\t\t\t/>\n\t\t));\n\n\t\treturn <View>{list}</View>;\n\t};\n\n\treturn (\n\t\t<Styled.ObjectNode>\n\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t<Pressable onPress={handleCollapse} style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t<Arrow direction={collapsed ? 'right' : 'down'} />\n\t\t\t\t\t<Text type=\"info\">{name} :</Text>\n\t\t\t\t</Pressable>\n\t\t\t\t{collapsed ? renderCollapsed() : <Text> [</Text>}\n\t\t\t</View>\n\t\t\t{!collapsed && renderNotCollapsed()}\n\t\t\t{!collapsed && <Text>]</Text>}\n\t\t</Styled.ObjectNode>\n\t);\n};\n","import * as React from 'react';\nimport { JsonValue } from './value';\nimport { JsonObject } from './object';\nimport { JsonArray } from './array';\nimport { getObjectType } from './utils';\n\nexport interface JsonNodeProps {\n\tdata: any;\n\tname: string;\n\tisCollapsed?: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand?: (keyPath: string[], deep: number, data: any) => void;\n\tkeyPath?: string[];\n\tdeep?: number;\n}\n\nexport const JsonNode = ({\n\tdata,\n\tname,\n\tisCollapsed = (keyPath: string[]) => keyPath.length > 0,\n\tonExpand = () => {},\n\tkeyPath = [],\n\tdeep = 0,\n}: JsonNodeProps) => {\n\tconst dataType = getObjectType(data);\n\n\tswitch (dataType) {\n\t\tcase 'String':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={`\"${data}\"`}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Number':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={data}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Boolean':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={!!data}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Date':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={data.toISOString()}\n\t\t\t\t\toriginalValue={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Null':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue=\"null\"\n\t\t\t\t\toriginalValue=\"null\"\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Undefined':\n\t\t\treturn (\n\t\t\t\t<JsonValue\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue=\"undefined\"\n\t\t\t\t\toriginalValue=\"undefined\"\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Object':\n\t\t\treturn (\n\t\t\t\t<JsonObject\n\t\t\t\t\tname={name}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 'Array':\n\t\t\treturn (\n\t\t\t\t<JsonArray\n\t\t\t\t\tname={name}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tkeyPath={keyPath}\n\t\t\t\t\tdeep={deep}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import * as React from 'react';\nimport { Raw } from './raw';\nimport { JsonNode } from './json/node';\nimport Button from '../button';\nimport Icon from '../icon';\nimport * as Styled from './styles';\n\nexport interface TreeProps {\n\tdata: any;\n\trootName?: string;\n\tisCollapsed?: (keyPath: string[], deep: number, data: any) => boolean;\n\tonExpand?: (keyPath: string[], deep: number, data: any) => void;\n\tfallback?: React.ReactNode;\n}\n\nexport const Tree = ({\n\tdata,\n\trootName = 'root',\n\tisCollapsed,\n\tonExpand,\n\tfallback = null,\n}: TreeProps) => {\n\tconst [raw, setRaw] = React.useState(false);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t{raw ? (\n\t\t\t\t<Raw data={data} />\n\t\t\t) : (\n\t\t\t\t<JsonNode\n\t\t\t\t\tdata={data}\n\t\t\t\t\tname={rootName}\n\t\t\t\t\tdeep={-1}\n\t\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Styled.RawButtonContainer>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"raw\"\n\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\tbackground=\"outline\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonPress={() => setRaw(!raw)}\n\t\t\t\t\taccessoryLeft={\n\t\t\t\t\t\traw ? (\n\t\t\t\t\t\t\t<Icon size=\"small\" name=\"visibility-off\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Icon size=\"small\" name=\"visibility\" />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Styled.RawButtonContainer>\n\t\t</Styled.Container>\n\t);\n};\n","import * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { useUncontrolledState } from '@wcpos/common/src/hooks/use-uncontrolled-state';\nimport Popover from '../popover';\nimport Arrow from '../arrow';\nimport BaseInput, { BaseInputContainer } from '../base-input';\n\nexport interface SelectChoice {\n\t/**\n\t * Label for the Option.\n\t */\n\tlabel: string;\n\t/**\n\t * Value for the option.\n\t */\n\tvalue: any;\n\t/**\n\t * Disable this option.\n\t */\n\tdisabled?: boolean;\n}\n\nexport interface SelectProps {\n\t/**\n\t * Label for the Select.\n\t */\n\tlabel: string;\n\t/**\n\t * Choices available in the Select.\n\t */\n\tchoices: SelectChoice[] | string[];\n\t/**\n\t * Currently selected value. If null, no value is selected.\n\t */\n\tselected?: string | null;\n\t/**\n\t * Callback called when selection is changed.\n\t */\n\tonChange?: (selected: string) => void;\n\t/**\n\t * Text to display as a placeholder.\n\t */\n\tplaceholder?: string;\n\t/**\n\t * Additional text to help the user.\n\t */\n\thelpText?: React.ReactNode;\n\t/**\n\t * Display an error state.\n\t */\n\terror?: boolean | string;\n\t/**\n\t * Disable the input and choice selection.\n\t */\n\tdisabled?: boolean;\n}\n\nconst maxHeight = 300;\n\n/**\n * Let the user choose one option from multiple ones.\n */\nexport const Select = ({\n\tlabel,\n\tchoices: choicesRaw,\n\tselected: selectedRaw = null,\n\tonChange: onChangeRaw,\n\tplaceholder,\n\thelpText,\n\terror = false,\n\tdisabled = false,\n}: SelectProps) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst showPopover = React.useCallback(() => setOpen(true), []);\n\tconst hidePopover = React.useCallback(() => setOpen(false), []);\n\tconst [selected, onChange] = useUncontrolledState(\n\t\tselectedRaw,\n\t\tonChangeRaw as ((value: string | null) => string) | undefined // This will never be called with a null parameter\n\t);\n\n\tconst choices = React.useMemo(\n\t\t() =>\n\t\t\tchoicesRaw.map((choice) =>\n\t\t\t\ttypeof choice === 'string' ? { label: choice, value: choice } : choice\n\t\t\t),\n\t\t[choicesRaw]\n\t);\n\n\tconst selectedChoice = React.useMemo(\n\t\t() => choices.find((x) => x.value === selected),\n\t\t[choices, selected]\n\t);\n\n\tconst handleSelect = (value: string) => {\n\t\tonChange(value);\n\t\tsetOpen(false);\n\t};\n\n\tconst choiceComponents = React.useMemo(\n\t\t() =>\n\t\t\tchoices.map((choice) => (\n\t\t\t\t<Popover.Item\n\t\t\t\t\tkey={choice.value}\n\t\t\t\t\tlabel={choice.label}\n\t\t\t\t\tdisabled={choice.disabled}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-no-bind\n\t\t\t\t\tonSelect={() => handleSelect(choice.value)}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[choices, onChange]\n\t);\n\n\treturn (\n\t\t<BaseInputContainer\n\t\t\tlabel={label}\n\t\t\tdisabled={disabled}\n\t\t\thelpText={helpText}\n\t\t\terror={error}\n\t\t\tonLabelClick={showPopover}\n\t\t>\n\t\t\t<Popover\n\t\t\t\topen={open}\n\t\t\t\tactivator={\n\t\t\t\t\t<BaseInput\n\t\t\t\t\t\tvalue={selectedChoice?.label ?? ''}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tfocused={open}\n\t\t\t\t\t\tonPress={showPopover}\n\t\t\t\t\t\trightAccessory={<Arrow direction={open ? 'up' : 'down'} />}\n\t\t\t\t\t\tstyle={{ minWidth: '100px' }}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tonRequestClose={hidePopover}\n\t\t\t\tpopoverStyle={{ maxHeight }}\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\thideBackdrop\n\t\t\t\tmatchWidth\n\t\t\t>\n\t\t\t\t<ScrollView>{choiceComponents}</ScrollView>\n\t\t\t</Popover>\n\t\t</BaseInputContainer>\n\t);\n};\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport Tree from '@wcpos/common/src/components/tree';\nimport Select from '@wcpos/common/src/components/select';\nimport Checkbox from '@wcpos/common/src/components/checkbox';\n\ntype ProductModalProps = {\n\tproduct: import('@wcpos/common/src/database').ProductDocument;\n\tonClose: () => void;\n};\n\nconst Modal = ({ product, onClose }: ProductModalProps) => {\n\tconst [selected, setSelected] = React.useState(0);\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"Name\" value={product.name} />\n\t\t\t\t<Select\n\t\t\t\t\tlabel=\"Status\"\n\t\t\t\t\tchoices={['draft', 'pending', 'private', 'publish']}\n\t\t\t\t\tselected={product.status}\n\t\t\t\t/>\n\t\t\t\t<TextInput label=\"Price\" value={product.price} />\n\t\t\t\t<TextInput label=\"Regular Price\" value={product.regularPrice} />\n\t\t\t\t<TextInput label=\"Sale Price\" value={product.salePrice} />\n\t\t\t\t<Checkbox label=\"On Sale\" checked={product.onSale} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>\n\t\t\t\t<Tree data={product.toJSON()} />\n\t\t\t</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<Dialog title={product.name} open onClose={onClose} primaryAction={{ label: 'Save' }}>\n\t\t\t<Tabs tabs={['Product', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t{content}\n\t\t\t</Tabs>\n\t\t</Dialog>\n\t);\n};\n\nexport default Modal;\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport Text from '@wcpos/common/src/components/text';\n\ntype ProductModalProps = {\n\tproduct: import('@wcpos/common/src/database').ProductDocument;\n\tonClose: () => void;\n};\n\nconst DeleteDialog = ({ product, onClose }: ProductModalProps) => {\n\treturn (\n\t\t<Dialog\n\t\t\ttitle=\"Confirm\"\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{\n\t\t\t\tlabel: 'Delete',\n\t\t\t\taction: () => {\n\t\t\t\t\tconsole.log('delete locally and on server');\n\t\t\t\t},\n\t\t\t\ttype: 'critical',\n\t\t\t}}\n\t\t\tsecondaryActions={[\n\t\t\t\t{ label: 'Delete locally', action: product.remove },\n\t\t\t\t{ label: 'Cancel', action: onClose },\n\t\t\t]}\n\t\t>\n\t\t\t<Dialog.Section>\n\t\t\t\t<Text>You are about to delete {product.name}</Text>\n\t\t\t</Dialog.Section>\n\t\t</Dialog>\n\t);\n};\n\nexport default DeleteDialog;\n","import * as React from 'react';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Icon from '@wcpos/common/src/components/icon';\nimport ProductModal from './modal';\nimport DeleteDialog from './delete-dialog';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').ProductDocument;\n};\n\nconst Actions = ({ item: product }: Props) => {\n\tconst [visible, setVisible] = React.useState(false);\n\tconst [showDialog, setShowDialog] = React.useState(false);\n\n\tconst handleSync = () => {\n\t\tconst replicationState = product.syncRestApi({\n\t\t\tpush: {},\n\t\t});\n\t\treplicationState.run(false);\n\t};\n\n\tconst handleDelete = () => {\n\t\tproduct.remove();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Show', action: () => setVisible(true) },\n\t\t\t\t\t{ label: 'Sync', action: handleSync },\n\t\t\t\t\t{ label: 'Delete', action: () => setShowDialog(true), type: 'critical' },\n\t\t\t\t]}\n\t\t\t\tactivator={<Icon name=\"more\" />}\n\t\t\t/>\n\t\t\t{showDialog && <DeleteDialog product={product} onClose={() => setShowDialog(false)} />}\n\t\t\t{visible && <ProductModal product={product} onClose={() => setVisible(false)} />}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\n\ninterface Props {\n\titem: any;\n\tcolumn: any;\n}\n\nexport const FormattedDate = ({ item, column }: Props) => {\n\treturn item[column.key] ? <Format.Date value={item[column.key]} /> : null;\n};\n\nexport default FormattedDate;\n","import image from './image';\nimport name from './name';\nimport categories from '../../common/product-categories';\nimport tags from '../../common/product-tags';\nimport Price from '../../common/price';\nimport actions from './actions';\nimport dateCreated from '../../common/date';\n\nexport default {\n\timage,\n\tname,\n\tcategories,\n\ttags,\n\tregularPrice: Price,\n\tsalePrice: Price,\n\tactions,\n\tdateCreated,\n};\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tflex: 1;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n","import * as React from 'react';\nimport { useObservable, useObservableState, useObservableSuspense } from 'observable-hooks';\nimport { tap } from 'rxjs/operators';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport Segment from '@wcpos/common/src/components/segment';\nimport Text from '@wcpos/common/src/components/text';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport Search from '@wcpos/common/src/components/search';\nimport Table from '../common/table';\nimport UiSettings from '../common/ui-settings';\nimport cells from './cells';\nimport * as Styled from './styles';\n\n/**\n *\n */\nconst Products = () => {\n\tconst { storeDB } = useAppState();\n\tconst ui = useObservableSuspense(useUIResource('products'));\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\t// @ts-ignore\n\tconst totalRecords = useObservableState(storeDB?.collections.products.totalRecords$);\n\tconst [isSyncing, setIsSyncing] = React.useState<boolean>(false);\n\tconst [recordsShowing, setRecordsShowing] = React.useState<number>(0);\n\tconst { data$, query, setQuery } = useDataObservable('products', {\n\t\tsearch: '',\n\t\tsortBy: 'name',\n\t\tsortDirection: 'asc',\n\t\tfilters: {\n\t\t\tcategory: null,\n\t\t\ttag: null,\n\t\t},\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tif (!storeDB) {\n\t\tthrow Error('something went wrong');\n\t}\n\n\t/**\n\t *\n\t */\n\tconst filters = React.useMemo(() => {\n\t\tconst f = [];\n\t\tif (get(query, 'filters.category')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.category.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.category', null));\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tif (get(query, 'filters.tag')) {\n\t\t\tf.push({\n\t\t\t\tlabel: get(query, 'filters.tag.name'),\n\t\t\t\tonRemove: () => {\n\t\t\t\t\tsetQuery((prev: any) => set({ ...prev }, 'filters.tag', null));\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn f;\n\t}, [query, setQuery]);\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<Segment.Group>\n\t\t\t\t<Segment>\n\t\t\t\t\t<Search\n\t\t\t\t\t\tlabel=\"Search Products\"\n\t\t\t\t\t\tplaceholder=\"Search Products\"\n\t\t\t\t\t\tvalue={query.search}\n\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\tactions={[<UiSettings ui={ui} />]}\n\t\t\t\t\t\tfilters={filters}\n\t\t\t\t\t/>\n\t\t\t\t</Segment>\n\t\t\t\t<Segment grow>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tcollection={storeDB.collections.products}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tdata$={data$}\n\t\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\t\tcells={cells}\n\t\t\t\t\t/>\n\t\t\t\t</Segment>\n\t\t\t\t<Segment style={{ alignItems: 'flex-end' }}>\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\tShowing {recordsShowing} of {totalRecords}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</>\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t</Styled.Container>\n\t);\n};\n\nexport default Products;\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport Tree from '@wcpos/common/src/components/tree';\n\ntype OrderModalProps = {\n\torder: import('@wcpos/common/src/database').OrderDocument;\n\tonClose: () => void;\n};\n\nconst Modal = ({ order, onClose }: OrderModalProps) => {\n\tconst [selected, setSelected] = React.useState(0);\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"Order Number\" value={order.number} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>\n\t\t\t\t<Tree data={order.toJSON()} />\n\t\t\t</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<Dialog open title=\"Order\" onClose={onClose} primaryAction={{ label: 'Save ' }}>\n\t\t\t<Tabs tabs={['Order', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t{content}\n\t\t\t</Tabs>\n\t\t</Dialog>\n\t);\n};\n\nexport default Modal;\n","import * as React from 'react';\nimport Button from '@wcpos/common/src/components/button';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Icon from '@wcpos/common/src/components/icon';\nimport OrderModal from './modal';\n\ninterface Props {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n}\n\nconst Actions = ({ item: order }: Props) => {\n\tconst [visible, setVisible] = React.useState(false);\n\n\tconst handleSync = () => {\n\t\tconsole.log('sync');\n\t};\n\n\tconst handleDelete = () => {\n\t\torder.remove();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Show', action: () => setVisible(true) },\n\t\t\t\t\t{ label: 'Sync', action: handleSync },\n\t\t\t\t\t{ label: 'Delete', action: handleDelete },\n\t\t\t\t]}\n\t\t\t\tactivator={<Icon name=\"more\" />}\n\t\t\t/>\n\t\t\t{visible && <OrderModal order={order} onClose={() => setVisible(false)} />}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n\tcolumn: import('@wcpos/common/src/components/table/types').ColumnProps;\n};\n\nconst Address = ({ item: order, column }: Props) => {\n\tconst address = order[column.key];\n\n\treturn address ? <Format.Address address={address} showName={false} /> : <Text.Skeleton />;\n};\n\nexport default Address;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n};\n\nconst Customer = ({ item: order }: Props) => {\n\treturn order.customer_id ? <Text>{order.customer_id}</Text> : <Text.Skeleton />;\n};\n\nexport default Customer;\n","import actions from './actions';\nimport Address from './address';\nimport customer from './customer';\nimport customerNote from './note';\nimport status from './status';\n\nexport default {\n\tactions,\n\tbilling: Address,\n\tshipping: Address,\n\tcustomer,\n\tcustomerNote,\n\tstatus,\n};\n","import * as React from 'react';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Tooltip from '@wcpos/common/src/components/tooltip';\n\ntype OrderNoteProps = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n};\n\nconst Note = ({ item: order }: OrderNoteProps) => {\n\tif (!order.note) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Tooltip content={order.note}>\n\t\t\t<Icon name=\"note\" />\n\t\t</Tooltip>\n\t);\n};\n\nexport default Note;\n","import * as React from 'react';\nimport Icon from '@wcpos/common/src/components/icon';\nimport Tooltip from '@wcpos/common/src/components/tooltip';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').OrderDocument;\n};\n\nconst Status = ({ item: order }: Props) => {\n\treturn order.status ? (\n\t\t<Tooltip content={order.status}>\n\t\t\t<Icon name={order.status} />\n\t\t</Tooltip>\n\t) : (\n\t\t<Icon.Skeleton />\n\t);\n};\n\nexport default Status;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tflex: 1;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n","import * as React from 'react';\nimport { Text } from 'react-native';\nimport { useObservableState, useObservable, useObservableSuspense } from 'observable-hooks';\nimport { switchMap, tap, debounceTime, catchError, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport Segment from '@wcpos/common/src/components/segment';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport Button from '@wcpos/common/src/components/button';\nimport Search from '@wcpos/common/src/components/search';\nimport Table from '../common/table';\nimport UiSettings from '../common/ui-settings';\nimport cells from './cells';\nimport * as Styled from './styles';\n\ntype SortDirection = import('@wcpos/common/src/components/table/types').SortDirection;\ntype OrderDocument = import('@wcpos/common/src/database').OrderDocument;\ninterface QueryState {\n\tsearch: string;\n\tsortBy: string;\n\tsortDirection: SortDirection;\n}\n\nconst escape = (text: string) => text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\nconst Orders = () => {\n\tconst { storeDB } = useAppState();\n\tconst ui = useObservableSuspense(useUIResource('orders'));\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\tconst { data$, query, setQuery } = useDataObservable('orders', {\n\t\tsearch: '',\n\t\tsortBy: 'dateCreatedGmt',\n\t\tsortDirection: 'desc',\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tif (!storeDB) {\n\t\tthrow Error('something went wrong');\n\t}\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<React.Suspense fallback={<Text>loading orders...</Text>}>\n\t\t\t\t<Segment.Group>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\tlabel=\"Search Orders\"\n\t\t\t\t\t\t\tplaceholder=\"Search Orders\"\n\t\t\t\t\t\t\tvalue={query.search}\n\t\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\t\tactions={[<UiSettings ui={ui} />]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment grow>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tcollection={storeDB.collections.orders}\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tdata$={data$}\n\t\t\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\t\t\tcells={cells}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment />\n\t\t\t\t</Segment.Group>\n\t\t\t</React.Suspense>\n\t\t</Styled.Container>\n\t);\n};\n\nexport default Orders;\n","import * as React from 'react';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport TextInput from '@wcpos/common/src/components/textinput';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Tabs from '@wcpos/common/src/components/tabs';\nimport Tree from '@wcpos/common/src/components/tree';\n\nexport interface AddCustomerProps {\n\tonClose: () => void;\n\tcustomer?: import('@wcpos/common/src/database').CustomerDocument;\n}\n\nconst AddCustomer = ({ onClose, customer }: AddCustomerProps) => {\n\tconst { storeDB } = useAppState();\n\tconst [firstName, setFirstName] = React.useState(customer?.firstName);\n\tconst [email, setEmail] = React.useState(customer?.email);\n\tconst [selected, setSelected] = React.useState(0);\n\n\tconst title = customer ? 'Edit Customer' : 'Add Customer';\n\n\tconst handleSave = async () => {\n\t\tconst currentCustomer = customer;\n\t\tif (!currentCustomer) {\n\t\t\tconst customersCollection = storeDB?.collections.customers;\n\t\t\t// @ts-ignore\n\t\t\tconst currentCustomer = await customersCollection?.insert({ firstName, email });\n\t\t} else {\n\t\t\tcurrentCustomer.atomicPatch({ firstName, email });\n\t\t}\n\n\t\tif (currentCustomer) {\n\t\t\t// @ts-ignore\n\t\t\tconst replicationState = currentCustomer.syncRestApi({\n\t\t\t\tpush: {},\n\t\t\t});\n\t\t\treplicationState.error$.subscribe((err: any) => {\n\t\t\t\tif (err.code === 401) {\n\t\t\t\t\t// showAuthLogin();\n\t\t\t\t\tconsole.log('need to login');\n\t\t\t\t}\n\t\t\t});\n\t\t\treplicationState.run(false);\n\t\t}\n\t};\n\n\tconst content =\n\t\tselected === 0 ? (\n\t\t\t<Dialog.Section>\n\t\t\t\t<TextInput label=\"First Name\" value={firstName} onChange={setFirstName} />\n\t\t\t\t<TextInput label=\"Email\" value={email} onChange={setEmail} />\n\t\t\t</Dialog.Section>\n\t\t) : (\n\t\t\t<Dialog.Section>{customer ? <Tree data={customer.toJSON()} /> : null}</Dialog.Section>\n\t\t);\n\n\treturn (\n\t\t<Dialog\n\t\t\ttitle={title}\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{ label: 'Save', action: handleSave }}\n\t\t>\n\t\t\t<Tabs tabs={['Form', 'JSON']} selected={selected} onSelect={setSelected}>\n\t\t\t\t{content}\n\t\t\t</Tabs>\n\t\t</Dialog>\n\t);\n};\n\nexport default AddCustomer;\n","import * as React from 'react';\nimport Format from '@wcpos/common/src/components/format';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n\tcolumn: import('@wcpos/common/src/components/table/types').ColumnProps;\n};\n\nconst Address = ({ item: customer, column }: Props) => {\n\treturn <Format.Address address={customer[column.key]} showName={false} />;\n};\n\nexport default Address;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n\tcolumn: import('@wcpos/common/src/components/table/types').ColumnProps;\n};\n\nconst Name = ({ item: customer, column }: Props) => {\n\tconst name = customer[column.key];\n\n\treturn name !== undefined ? <Text>{name}</Text> : <Text.Skeleton />;\n};\n\nexport default Name;\n","import avatarUrl from './avatar';\nimport actions from './actions';\nimport Address from './address';\nimport Name from './name';\nimport email from './email';\n\nexport default {\n\tavatarUrl,\n\tfirstName: Name,\n\tlastName: Name,\n\temail,\n\tbilling: Address,\n\tshipping: Address,\n\tactions,\n};\n","import * as React from 'react';\nimport Img from '@wcpos/common/src/components/image';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n};\n\nconst Avatar = ({ item: customer }: Props) => {\n\treturn <Img src={customer.avatarUrl} style={{ width: 100, height: 100 }} />;\n};\n\nexport default Avatar;\n","import * as React from 'react';\nimport Text from '@wcpos/common/src/components/text';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n};\n\nconst Email = ({ item: customer }: Props) => {\n\treturn customer.email !== undefined ? <Text>{customer.email}</Text> : <Text.Skeleton />;\n};\n\nexport default Email;\n","import * as React from 'react';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Icon from '@wcpos/common/src/components/icon';\nimport EditCustomer from '../add-customer-modal';\n\ntype Props = {\n\titem: import('@wcpos/common/src/database').CustomerDocument;\n};\n\nconst Actions = ({ item: customer }: Props) => {\n\tconst [showModal, setShowModal] = React.useState(false);\n\n\tconst handleSync = () => {\n\t\t// @ts-ignore\n\t\tconst replicationState = customer.syncRestApi({\n\t\t\tpush: {},\n\t\t});\n\t\treplicationState.run(false);\n\t};\n\n\tconst handleDelete = () => {\n\t\tcustomer.remove();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tactivator={<Icon name=\"more\" />}\n\t\t\t\titems={[\n\t\t\t\t\t{ label: 'Edit', action: () => setShowModal(true) },\n\t\t\t\t\t{ label: 'Sync', action: handleSync },\n\t\t\t\t\t{ label: 'Delete', action: handleDelete },\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t{showModal && <EditCustomer onClose={() => setShowModal(false)} customer={customer} />}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\theight: 100%;\n\tflex-direction: row;\n\tflex: 1;\n\tpadding: ${({ theme }) => `${theme.PAGE_MAIN_PADDING_Y} ${theme.PAGE_MAIN_PADDING_X}`};\n`;\n","import * as React from 'react';\nimport { Text } from 'react-native';\nimport {\n\tuseObservableState,\n\tuseObservable,\n\tuseObservableSuspense,\n\tuseSubscription,\n} from 'observable-hooks';\nimport { tap } from 'rxjs/operators';\nimport useDataObservable from '@wcpos/common/src/hooks/use-data-observable';\nimport Segment from '@wcpos/common/src/components/segment';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport useUIResource from '@wcpos/common/src/hooks/use-ui';\nimport Search from '@wcpos/common/src/components/search';\nimport useWhyDidYouUpdate from '@wcpos/common/src/hooks/use-why-did-you-update';\nimport Table from '../common/table';\nimport UiSettings from '../common/ui-settings';\nimport cells from './cells';\nimport * as Styled from './styles';\n\ntype CustomersScreenProps = import('@wcpos/common/src/navigators/main').CustomersScreenProps;\n\nconst Customers = ({ navigation }: CustomersScreenProps) => {\n\tconst { user, storeDB } = useAppState();\n\tconst ui = useObservableSuspense(useUIResource('customers'));\n\tconst [columns] = useObservableState(() => ui.get$('columns'), ui.get('columns'));\n\tconst { data$, query, setQuery } = useDataObservable('customers', {\n\t\tsearch: '',\n\t\tsortBy: 'lastName',\n\t\tsortDirection: 'asc',\n\t});\n\n\tconst onSearch = React.useCallback(\n\t\t(search: string) => {\n\t\t\tsetQuery((prev) => ({ ...prev, search }));\n\t\t},\n\t\t[setQuery]\n\t);\n\n\tif (!storeDB) {\n\t\tthrow Error('something went wrong');\n\t}\n\n\tuseWhyDidYouUpdate('Customer Page', { data$, query, ui, columns, storeDB, navigation });\n\n\treturn (\n\t\t<Styled.Container>\n\t\t\t<React.Suspense fallback={<Text>loading customers...</Text>}>\n\t\t\t\t<Segment.Group>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\tlabel=\"Search Customers\"\n\t\t\t\t\t\t\tplaceholder=\"Search Customers\"\n\t\t\t\t\t\t\tvalue={query.search}\n\t\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\t\tactions={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'add',\n\t\t\t\t\t\t\t\t\taction: () => {\n\t\t\t\t\t\t\t\t\t\tconsole.log('show modal');\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t<UiSettings ui={ui} />,\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment grow>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tcollection={storeDB.collections.customers}\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tdata$={data$}\n\t\t\t\t\t\t\tsetQuery={setQuery}\n\t\t\t\t\t\t\tsortBy={query.sortBy}\n\t\t\t\t\t\t\tsortDirection={query.sortDirection}\n\t\t\t\t\t\t\tcells={cells}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment />\n\t\t\t\t</Segment.Group>\n\t\t\t</React.Suspense>\n\t\t</Styled.Container>\n\t);\n};\n\nexport default Customers;\n","import * as React from 'react';\nimport Table from '@wcpos/common/src/components/table';\nimport Button from '@wcpos/common/src/components/button';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport forEach from 'lodash/forEach';\nimport map from 'lodash/map';\n\ntype UserDatabase = import('@wcpos/common/src/database').UserDatabase;\n\nconst AuthDB = () => {\n\tconst { userDB } = useAppState() as { userDB: UserDatabase };\n\tconst [counts, setCounts] = React.useState<any[]>([]);\n\n\t// subscribe to all collection changes\n\tforEach(userDB.collections, (collection, key) => {\n\t\tcollection.$.subscribe((changeEvent) => console.log(key, changeEvent));\n\t});\n\n\tReact.useEffect(() => {\n\t\t(async function init() {\n\t\t\tconst promises = map(userDB.collections, async (collection, key) => {\n\t\t\t\tconst records = await collection.find().exec();\n\t\t\t\treturn {\n\t\t\t\t\tname: key,\n\t\t\t\t\tcount: records.length,\n\t\t\t\t};\n\t\t\t});\n\t\t\tconst resolved = await Promise.all(promises);\n\n\t\t\tsetCounts(resolved);\n\t\t})();\n\t}, []);\n\tconst deleteAll = async (table: string) => {\n\t\t// const query = userDB.collections.map[table].query();\n\t\t// await userDB.action(async () => {\n\t\t// \tawait query.destroyAllPermanently();\n\t\t// });\n\t};\n\n\tconst printToConsole = async (collection: string) => {\n\t\t// @ts-ignore\n\t\tconst data = await userDB.collections[collection].find().exec();\n\t\tconsole.log(data);\n\t};\n\n\tconst columns = [\n\t\t{ key: 'name', label: 'Name' },\n\t\t{ key: 'count', label: 'Count' },\n\t\t{ key: 'actions', label: '' },\n\t];\n\n\treturn (\n\t\t<Table columns={columns} data={counts}>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row>\n\t\t\t\t\t{columns.map(({ key, label }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tdataKey={key}\n\t\t\t\t\t\t\t\t// flexGrow={flexGrow}\n\t\t\t\t\t\t\t\t// flexShrink={flexShrink}\n\t\t\t\t\t\t\t\t// width={width}\n\t\t\t\t\t\t\t\tsort={() => {\n\t\t\t\t\t\t\t\t\tconsole.log('sort');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsortBy=\"name\"\n\t\t\t\t\t\t\t\tsortDirection=\"asc\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n\t\t\t\t{({ item }: any) => (\n\t\t\t\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t\t\t\t{({ column, getCellProps }: any) => {\n\t\t\t\t\t\t\tif (column.key === 'actions') {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Table.Body.Row.Cell>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Delete All\"\n\t\t\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteAll(item.name);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Info\"\n\t\t\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tprintToConsole(item.name);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn <Table.Body.Row.Cell {...getCellProps()} />;\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Table.Body.Row>\n\t\t\t\t)}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default AuthDB;\n","import * as React from 'react';\nimport { useObservableState } from 'observable-hooks';\nimport map from 'lodash/map';\nimport forEach from 'lodash/forEach';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Table from '@wcpos/common/src/components/table';\nimport Button from '@wcpos/common/src/components/button';\n\ntype StoreDatabase = import('@wcpos/common/src/database').StoreDatabase;\ntype Collection = import('rxdb/plugins/core').RxCollection;\n\nconst Row = ({ item, columns }: { item: Collection; columns: any[] }) => {\n\tconst count = useObservableState(item.totalRecords$);\n\n\treturn (\n\t\t<Table.Body.Row rowData={item} columns={columns}>\n\t\t\t{({ column }: any) => {\n\t\t\t\tswitch (column.key) {\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\treturn <Table.Body.Row.Cell cellData={item.name} />;\n\t\t\t\t\tcase 'count':\n\t\t\t\t\t\treturn <Table.Body.Row.Cell cellData={count} />;\n\t\t\t\t\tcase 'actions':\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Body.Row.Cell>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttitle=\"Delete All\"\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\titem.remove();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Table.Body.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}}\n\t\t</Table.Body.Row>\n\t);\n};\n\nconst StoreDB = () => {\n\tconst { storeDB } = useAppState() as { storeDB: StoreDatabase };\n\n\tconst columns = [\n\t\t{ key: 'name', label: 'Name' },\n\t\t{ key: 'count', label: 'Count' },\n\t\t{ key: 'actions', label: '' },\n\t];\n\n\treturn (\n\t\t<Table columns={columns} data={Object.values(storeDB.collections)}>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Header.Row>\n\t\t\t\t\t{columns.map(({ key, label }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table.Header.Row.Cell\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tdataKey={key}\n\t\t\t\t\t\t\t\tsort={() => {\n\t\t\t\t\t\t\t\t\tconsole.log('sort');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsortBy=\"name\"\n\t\t\t\t\t\t\t\tsortDirection=\"asc\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t</Table.Header.Row.Cell>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Table.Header.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>{({ item }: any) => <Row item={item} columns={columns} />}</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default StoreDB;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport AuthDB from './auth-db';\nimport StoreDB from './store-db';\nimport Segment from '../../components/segment';\n\nconst Support = () => {\n\treturn (\n\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t<Segment.Group style={{ width: '50%' }}>\n\t\t\t\t<Segment>Authentication Database</Segment>\n\t\t\t\t<Segment>\n\t\t\t\t\t<AuthDB />\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t\t<Segment.Group style={{ width: '50%' }}>\n\t\t\t\t<Segment>Store Database</Segment>\n\t\t\t\t<Segment>\n\t\t\t\t\t<StoreDB />\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t</View>\n\t);\n};\n\nexport default Support;\n","import * as React from 'react';\nimport { useObservable, useObservableState } from 'observable-hooks';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { View } from 'react-native';\nimport Dialog from '@wcpos/common/src/components/dialog';\nimport Text from '@wcpos/common/src/components/text';\nimport Select from '@wcpos/common/src/components/select';\nimport Table from '@wcpos/common/src/components/table';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\n\ninterface UserSettingsProps {\n\tonClose: () => void;\n}\n\nconst UserSettings = ({ onClose }: UserSettingsProps) => {\n\tconst { storeDB } = useAppState();\n\tconst [country, setCountry] = React.useState('GB');\n\n\tconst taxRates$ = useObservable(\n\t\t(inputs$) =>\n\t\t\tinputs$.pipe(\n\t\t\t\tswitchMap((q) => {\n\t\t\t\t\tconst RxQuery = storeDB?.collections.taxes.find().where('country').eq(country);\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn RxQuery.$;\n\t\t\t\t})\n\t\t\t),\n\t\t[country]\n\t);\n\n\tconst taxRates = useObservableState(taxRates$, []);\n\tconsole.log(taxRates);\n\n\treturn (\n\t\t<Dialog\n\t\t\tsectioned\n\t\t\ttitle=\"Settings\"\n\t\t\topen\n\t\t\tonClose={onClose}\n\t\t\tprimaryAction={{ label: 'Save', action: onClose }}\n\t\t>\n\t\t\t<View style={{ zIndex: 999999 }}>\n\t\t\t\t<Text>Store location: </Text>\n\t\t\t\t<Select\n\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\tplaceholder=\"GB\"\n\t\t\t\t\tchoices={[\n\t\t\t\t\t\t{ label: 'GB', value: 'GB' },\n\t\t\t\t\t\t{ label: 'US', value: 'US' },\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t<Table\n\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t{ key: 'country', label: 'Country' },\n\t\t\t\t\t\t{ key: 'name', label: 'Name' },\n\t\t\t\t\t\t{ key: 'rate', label: 'Rate' },\n\t\t\t\t\t]}\n\t\t\t\t\tdata={taxRates}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</Dialog>\n\t);\n};\n\nexport default UserSettings;\n","import styled from 'styled-components/native';\n\nexport const DropDown = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n`;\n","import * as React from 'react';\nimport { useNavigation, CommonActions } from '@react-navigation/native';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Avatar from '@wcpos/common/src/components/avatar';\nimport Dropdown from '@wcpos/common/src/components/dropdown';\nimport Text from '@wcpos/common/src/components/text';\nimport UserSettings from './user-settings';\nimport * as Styled from './styles';\n\n// interface Props {\n// user: import('@wcpos/common/src/database').UserDocument;\n// }\n\nexport const UserMenu = () => {\n\tconst { user, unsetLastUser } = useAppState();\n\tconst [showSettings, setShowSettings] = React.useState(false);\n\tconst navigation = useNavigation();\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tactivator={\n\t\t\t\t\t<Styled.DropDown>\n\t\t\t\t\t\t<Text type=\"inverse\">{user?.displayName}</Text>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tsrc=\"https://secure.gravatar.com/avatar/a2a53c07cdd4a8aa81c043baafd0915f\"\n\t\t\t\t\t\t\t// placeholder=\"PK\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Styled.DropDown>\n\t\t\t\t}\n\t\t\t\titems={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Logout',\n\t\t\t\t\t\taction: async () => {\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tnavigation.navigate('Auth');\n\t\t\t\t\t\t\tawait unsetLastUser();\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Settings',\n\t\t\t\t\t\taction: () => setShowSettings(true),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Modal',\n\t\t\t\t\t\taction: () =>\n\t\t\t\t\t\t\tnavigation.dispatch(\n\t\t\t\t\t\t\t\tCommonActions.navigate({ name: 'Modal', params: { foo: 'bar' } })\n\t\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t/>\n\n\t\t\t{showSettings && <UserSettings onClose={() => setShowSettings(false)} />}\n\t\t</>\n\t);\n};\n","import * as React from 'react';\nimport useAppState from '@wcpos/common/src/hooks/use-app-state';\nimport Icon from '@wcpos/common/src/components/icon';\n\nexport const Online = () => {\n\tconst { online } = useAppState();\n\n\treturn <Icon name=\"circle\" size=\"x-small\" color={online ? 'green' : 'red'} />;\n};\n","import * as React from 'react';\nimport Icon from '@wcpos/common/src/components/icon';\n\nexport const Notifications = () => {\n\treturn (\n\t\t<>\n\t\t\t<Icon name=\"notifications\" onPress={() => {}} />\n\t\t</>\n\t);\n};\n","import styled from 'styled-components/native';\n\nexport const Right = styled.View`\n\tflex-direction: row;\n\talign-items: center;\n`;\n","import * as React from 'react';\nimport UserMenu from './user-menu';\nimport Online from './online';\nimport Notifications from './notifications';\nimport * as Styled from './styles';\n\nconst HeaderRight = () => {\n\treturn (\n\t\t<Styled.Right>\n\t\t\t<Online />\n\t\t\t<Notifications />\n\t\t\t<UserMenu />\n\t\t</Styled.Right>\n\t);\n};\n\nexport default HeaderRight;\n","import * as React from 'react';\nimport { useNavigation, DrawerActions, RouteProp } from '@react-navigation/native';\nimport {\n\tcreateDrawerNavigator,\n\tDrawerNavigationOptions,\n\tDrawerNavigationProp,\n} from '@react-navigation/drawer';\nimport POS from '@wcpos/common/src/screens/pos';\nimport Products from '@wcpos/common/src/screens/products';\nimport Orders from '@wcpos/common/src/screens/orders';\nimport Customers from '@wcpos/common/src/screens/customers';\nimport Support from '@wcpos/common/src/screens/support';\nimport Button from '@wcpos/common/src/components/button';\nimport HeaderRight from '@wcpos/common/src/screens/header/right';\n\ntype MainScreenProps = import('./app').MainScreenProps;\n\nexport type DrawerParamList = {\n\tPOS: undefined;\n\tProducts: undefined;\n\tOrders: undefined;\n\tCustomers: undefined;\n\tSupport: undefined;\n};\n\nexport interface POSScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'POS'>;\n\troute: RouteProp<DrawerParamList, 'POS'>;\n}\n\nexport interface ProductsScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Products'>;\n\troute: RouteProp<DrawerParamList, 'Products'>;\n}\n\nexport interface OrdersScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Orders'>;\n\troute: RouteProp<DrawerParamList, 'Orders'>;\n}\n\nexport interface CustomersScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Customers'>;\n\troute: RouteProp<DrawerParamList, 'Customers'>;\n}\n\nexport interface SupportScreenProps {\n\tnavigation: DrawerNavigationProp<DrawerParamList, 'Support'>;\n\troute: RouteProp<DrawerParamList, 'Support'>;\n}\n\nconst Drawer = createDrawerNavigator<DrawerParamList>();\n\n/**\n *\n */\nconst MainNavigator = ({ navigation, route }: MainScreenProps) => {\n\t// const navigation = useNavigation();\n\n\tconst openDrawer = React.useCallback(() => {\n\t\tnavigation.dispatch(DrawerActions.openDrawer());\n\t}, []);\n\n\tconst screenOptions = React.useMemo<DrawerNavigationOptions>(\n\t\t() => ({\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#f4511e',\n\t\t\t\theight: '40px',\n\t\t\t},\n\t\t\theaderTintColor: '#fff',\n\t\t\theaderTitleStyle: {\n\t\t\t\tfontWeight: 'bold',\n\t\t\t\ttextAlign: 'center',\n\t\t\t\tmargin: 0,\n\t\t\t},\n\t\t\theaderBackgroundContainerStyle: {},\n\t\t\theaderLeftContainerStyle: {\n\t\t\t\tpadding: '5px',\n\t\t\t\tflexGrow: 1,\n\t\t\t\tflexShrink: 1,\n\t\t\t\tflexBasis: '20%',\n\t\t\t},\n\t\t\theaderRightContainerStyle: {\n\t\t\t\tpadding: '5px',\n\t\t\t\tflexGrow: 1,\n\t\t\t\tflexShrink: 1,\n\t\t\t\tflexBasis: '20%',\n\t\t\t},\n\t\t\theaderTitleContainerStyle: {\n\t\t\t\tpadding: '5px',\n\t\t\t\tflexGrow: 1,\n\t\t\t\tflexShrink: 1,\n\t\t\t\tflexBasis: '100%',\n\t\t\t},\n\t\t\theaderLeft: () => <Button onPress={openDrawer} title=\"Menu\" />,\n\t\t\theaderRight: HeaderRight,\n\t\t}),\n\t\t[openDrawer]\n\t);\n\n\treturn (\n\t\t<Drawer.Navigator screenOptions={screenOptions}>\n\t\t\t<Drawer.Screen name=\"POS\" component={POS} />\n\t\t\t<Drawer.Screen name=\"Products\" component={Products} />\n\t\t\t<Drawer.Screen name=\"Orders\" component={Orders} />\n\t\t\t<Drawer.Screen name=\"Customers\" component={Customers} />\n\t\t\t<Drawer.Screen name=\"Support\" component={Support} />\n\t\t</Drawer.Navigator>\n\t);\n};\n\nexport default MainNavigator;\n"],"sourceRoot":""}